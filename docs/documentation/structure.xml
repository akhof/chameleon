<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.8.5">
  <partials/>
  <file path="Colors/HSLColor.php" generated-path="Colors.HSLColor.html" hash="c7f90287764bbe31638c7d053ceb874d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="13" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>HSLColor</name>
      <full_name>\Chameleon\Colors\HSLColor</full_name>
      <docblock line="13">
        <description>Color Class for HSL colors</description>
        <long-description>Represents a color based on the HSL (hue, saturation, value) system</long-description>
        <tag name="api" line="13" description=""/>
        <tag name="package" line="13" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Color" refers="\Chameleon\Colors\Color" link="/classes/Chameleon.Colors.Color.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSLColor::hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSLColor::saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$lightness</name>
        <full_name>\Chameleon\Colors\HSLColor::lightness</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSLColor::red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSLColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSLColor::blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="32" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLColor::__toString()</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="42" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSLColor::getHue()</full_name>
        <docblock line="42">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="42" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="53" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSLColor::setHue()</full_name>
        <docblock line="53">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="53" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="53" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::getSaturation()</full_name>
        <docblock line="70">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="70" description="saturation value [0, 1]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="81" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::setSaturation()</full_name>
        <docblock line="81">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="81" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="integer" variable="$saturation">
            <type>integer</type>
          </tag>
          <tag name="return" line="81" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="98" package="Default">
        <name>getLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::getLightness()</full_name>
        <docblock line="98">
          <description>Get lightness</description>
          <long-description>Returns the lightness of this color</long-description>
          <tag name="return" line="98" description="lightness [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="109" package="Default">
        <name>setLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::setLightness()</full_name>
        <docblock line="109">
          <description>Set lightness</description>
          <long-description>Sets the lightness of this color</long-description>
          <tag name="param" line="109" description="&lt;p&gt;The lightness [0, 1]&lt;/p&gt;" type="integer" variable="$lightness">
            <type>integer</type>
          </tag>
          <tag name="return" line="109" description="" type="\Chameleon\Colors\HSLColor">
            <type>\Chameleon\Colors\HSLColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="120" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSLColor::makeRGB()</full_name>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="138" package="Default">
        <name>hue2rgb</name>
        <full_name>\Chameleon\Colors\HSLColor::hue2rgb()</full_name>
        <docblock line="138">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$p</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$q</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="158" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::getRGBA()</full_name>
        <docblock line="158">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::getRGBA()" refers="\Chameleon\Colors\Color::getRGBA()" link="/classes/Chameleon.Colors.Color.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="162" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLColor::fromRGBA()</full_name>
        <docblock line="162">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::fromRGBA()" refers="\Chameleon\Colors\Color::fromRGBA()" link="/classes/Chameleon.Colors.Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="26" code="PPC:ERR-50015">Argument $saturation is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $saturation does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $saturation in __construct()</error>
      <error line="26" code="PPC:ERR-50015">Argument $lightness is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $lightness does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $lightness in __construct()</error>
      <error line="32" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="120" code="PPC:ERR-50008">No summary for method makeRGB()</error>
      <error line="138" code="PPC:ERR-50015">Argument $p is missing from the Docblock of hue2rgb</error>
      <error line="138" code="PPC:ERR-50015">Argument $q is missing from the Docblock of hue2rgb</error>
      <error line="138" code="PPC:ERR-50015">Argument $t is missing from the Docblock of hue2rgb</error>
      <error line="138" code="PPC:ERR-50008">No summary for method hue2rgb()</error>
      <error line="158" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="162" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="162" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $hue</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $saturation</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $lightness</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $red</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $green</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $blue</error>
    </parse_markers>
    <source>eJytWE1v2zgQvftXzBo+SKniryABtq6TtsGiPRQoEAd72RSFotCWUFlSRLrtYpH/vjOUTFEULTNpBQShNTOPb4ZvSNpvroq4GAA+WbhlvAgjBtcxDlOWZ3fXeZqXfDGQDjuum/76GbFCJHnG7/4O0x37vBOf1+/zXfbAlWlhiasg724+vH8nhzX45ORE/j8B+Rau05BzWOPo4+oTRDKocqjdblhRMs4ywSGs7HAfcvYAeQYiZjLMi3csAB6KXRkSnwC+E1Uf+L9csG2N9DYskmo4kf8iOTXGV0zYT8EwqZrXf9KFnqJMvoeCwQgnWXTfNrNajGmyiUXG+L60lTEXLBKYwahkDwvb+03JWGa13KdEQln21awrKhOKcKlEuYtEXmq2t0VYhltIMiETgY/4J4sE/0wDODv/80vjPGlm3t2nSQTrXRZRhvD1q0L39lABrNM8FHol1CuVv68VlJ6RiBMOp5fAmUAqHgH5i4MuKwXtadP0BHzaT+xpHBr3p0FPiiJfiTLJNp4Pr4HLocG+ZEghg2HMU28I42ZmquwYhgG03jaMLUZFj2z+0MqxvcwfmJATyeVr3mseN5Ifl/2hPCFfg5xUNpEujTodWtCXyWJTLSLVi0CsxdJr5JDk6miS6OGcoSH+21ZUN1NVEs7StUsBahXvJ5DCwVCjEskavD9UHaKYRd9uwmxTqT+AioZvtgo9Ii7zH5CxH3BwD/aGCILiamG1G0QrNj0t1S6N/a3lsA2/MdzIPX8xOLi0jsLVesFNv2aAk4w7QbTGM1cta7sNrWS1l/WL2nYK9GrbqQ5K4u5F0JSuBd3aMMyavET1Wqk6p8C+C1ybQD8/iNrLO6FBoobo4Lp1hVavpf2Yb7n/xh5RR8LR5mgOj2NdUa1O4/+shmhOU9d+0C4+R1NeHU1Z9YFDvloDNN63rdjfIfymJN2rzjM3fxX5q7JXQKR6E9VN9E2Rlq3bq9X5xZLf349VQRWSeU2MiYf15iDNXDcfbNFU9zqQlLFWHkEvYep3l0Ih4e1dB5aXdv0F3dVlGc3S659Yit+aLJM8YiRKA97AdHzuwxVlcQLeDF5h1iQx/ExDOK0sIyMfCVIgyJyMKbk9dj2OJVeSxDx9Aebl5t4bFSiwxwAJxkhiNp/6MIGzi6nvW0iY9TmO6YJWF9eB4GkPwadBd3RYpSb6SPjdHh8JWjNbD6Pl1RJmfWqoAS6xX+0Ap0cA7HRmkwsbXt2nmA+uooeSQ5EUPurlgjQjaDQ/P3fgSzPMe2ZAaHeo+eTsWWQ9DKAPku+FA+k9qcJ07flWiIcg/ZIhzz/1k4b9DKRNWrl4ekMFRjMEbTnjRt37FZUL3Nw0Tusy30pSDaERyjM0qzeZ6NTG4/HCUP3T4OryfxXToH8=</source>
  </file>
  <file path="Colors/RGBColor.php" generated-path="Colors.RGBColor.html" hash="c71030111474a45c1d8697c6f7030fd1" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="7" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>RGBColor</name>
      <full_name>\Chameleon\Colors\RGBColor</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Color" refers="\Chameleon\Colors\Color" link="/classes/Chameleon.Colors.Color.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::red</full_name>
        <default></default>
        <docblock line="13">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::green</full_name>
        <default></default>
        <docblock line="20">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="27" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::blue</full_name>
        <default></default>
        <docblock line="27">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="36" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="36">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="49">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="49" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="58" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="58">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="58" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="68" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="68">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="68" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="83" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="83">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="83" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="93" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="93">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="93" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="93" description="" type="\Chameleon\Colors\RGBColor">
            <type>\Chameleon\Colors\RGBColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="108" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="108">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="108" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="118" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="118">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="118" description="self" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="128" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::getRGBA()</full_name>
        <docblock line="128">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::getRGBA()" refers="\Chameleon\Colors\Color::getRGBA()" link="/classes/Chameleon.Colors.Color.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="132" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBColor::fromRGBA()</full_name>
        <docblock line="132">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::fromRGBA()" refers="\Chameleon\Colors\Color::fromRGBA()" link="/classes/Chameleon.Colors.Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\RGBColor</error>
      <error line="128" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="132" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="132" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJy1Vt9v2jAQfu9fcUM8BJS106S+lNFuoI3HSjDtZUyVMQ6JFuzIcdpK0/73+RfBDg6EqfgBOeb83X13n+379FCkxRXIQdGWlAXCBKapnOaE0eWU5YyXoyttUJXuX19fMSlExmi5/IHyijxW4jGZsIquy/qvUWCfgVzOZ5MvemrBcY7KEuSqXgTyKohEAvP1R5uocTMc1nMYwveUACdrwCmilOTwrCKBnx9i+Hh7+8uxdDd9fkYcMiqctZt6XnAmCBYSsy+BbXAtnjecEHoZ3xr6uPeVcncR5wq53fdUVwrLwgteYcF4m7cCcbRV/nQqu9fK22lyfEa2vd06R92T5WSjWuUZhqSiWAkZnp5qwtGOUexEGO/9DRy5qtEXaVbC+3soiZiTdaS2DkatJjMFFxnUI2YT6Sky/vZGf1uLNiMCZPgZ3cgaFJyUhAqkmbEENCxWJ83d4s6/Mb5F4g74ZhVp5pa09t9Wf05Exal12zHLgi20eTSAu13Afjotak+F0oPrfVKUtq6hF4O3alRzuK4FIZcHva7pO9DuCd5KEEp6/6G2jVGKyoFCCSbA5d2FwkJSEKEjeMbxPXLodsUmedKJoj0MO3hdbrm3wTVLIHpXM8Upwb/niG5IZM6fCWTQPHFqiJSzF6DkBVpfp6gnQaQuPCz/xDnpVMPT2rj5QjSL01VYgYvtotIyN0w3cdl36DSRxXlEgjf828rL0Ny7aKqkXVv2cnsjdfloTX25X2GtmfyMD3uCZr266u3wLbyo3PRL1U1tpvE4zWJxFotQP3Baasr+HLlpmq1NQLvYlPWbac0D63aV6ZSMD5q+ZnmCZQm9W7Kv19WuG/xwzRWf2iRyL9a4If3Yj1XSC3c8NphS9TVOTAlnWx3UPqC+7B1QM9V+XDYsZagDsQ9yDO6SvUj9RSN3L0Tz+3D/D9vwaJY=</source>
  </file>
  <file path="Patterns/IPattern.php" generated-path="Patterns.IPattern.html" hash="50f3c655899c98bf818cae49e730160d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <interface namespace="Chameleon\Patterns" line="8" package="Default">
      <name>IPattern</name>
      <full_name>\Chameleon\Patterns\IPattern</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="9" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\IPattern::getColorAt()</full_name>
        <docblock line="9">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50009">No summary for interface \Chameleon\Patterns\IPattern</error>
      <error line="9" code="PPC:ERR-50015">Argument $x is missing from the Docblock of getColorAt</error>
      <error line="9" code="PPC:ERR-50015">Argument $y is missing from the Docblock of getColorAt</error>
      <error line="9" code="PPC:ERR-50008">No summary for method getColorAt()</error>
    </parse_markers>
    <source>eJxtjDELwjAQhff8ihscWnDR0ahFOnVzcipIjFcbSJOQXMAi/neTUMHBt7yD7763b9zoGKTcUWrhsQrklaQrzQ4DHGBT84KNmDA4IRHaMZ0arenPggi9CZyVlxh+4QUlWb/lf1BrtfWh70ovsjJpasj73TILrwJyXLxpJWGIRpKyBh5IxT1RlTxYPddQeq5hB9/ZLL5Zc/wAkpVHyg==</source>
  </file>
  <file path="Vector2.php" generated-path="Vector2.html" hash="86c418fecbc884696a6c7f708291eb8f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Chameleon" line="4" package="Default">
      <extends/>
      <name>Vector2</name>
      <full_name>\Chameleon\Vector2</full_name>
      <docblock line="4">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="4" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon" line="5" package="Default">
        <name>$x</name>
        <full_name>\Chameleon\Vector2::x</full_name>
        <default></default>
        <docblock line="5">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon" line="6" package="Default">
        <name>$y</name>
        <full_name>\Chameleon\Vector2::y</full_name>
        <default></default>
        <docblock line="6">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="8" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Vector2::__construct()</full_name>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="13" package="Default">
        <name>getX</name>
        <full_name>\Chameleon\Vector2::getX()</full_name>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="17" package="Default">
        <name>getY</name>
        <full_name>\Chameleon\Vector2::getY()</full_name>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="21" package="Default">
        <name>setX</name>
        <full_name>\Chameleon\Vector2::setX()</full_name>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="26" package="Default">
        <name>setY</name>
        <full_name>\Chameleon\Vector2::setY()</full_name>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="31" package="Default">
        <name>incX</name>
        <full_name>\Chameleon\Vector2::incX()</full_name>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inc</name>
          <default>1</default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="36" package="Default">
        <name>incY</name>
        <full_name>\Chameleon\Vector2::incY()</full_name>
        <docblock line="36">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$inc</name>
          <default>1</default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="41" package="Default">
        <name>decX</name>
        <full_name>\Chameleon\Vector2::decX()</full_name>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dec</name>
          <default>1</default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="46" package="Default">
        <name>decY</name>
        <full_name>\Chameleon\Vector2::decY()</full_name>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dec</name>
          <default>1</default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="51" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Vector2::__toString()</full_name>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="4" code="PPC:ERR-50005">No summary for class \Chameleon\Vector2</error>
      <error line="8" code="PPC:ERR-50015">Argument $x is missing from the Docblock of __construct</error>
      <error line="8" code="PPC:ERR-50015">Argument $y is missing from the Docblock of __construct</error>
      <error line="8" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="13" code="PPC:ERR-50008">No summary for method getX()</error>
      <error line="17" code="PPC:ERR-50008">No summary for method getY()</error>
      <error line="21" code="PPC:ERR-50015">Argument $x is missing from the Docblock of setX</error>
      <error line="21" code="PPC:ERR-50008">No summary for method setX()</error>
      <error line="26" code="PPC:ERR-50015">Argument $y is missing from the Docblock of setY</error>
      <error line="26" code="PPC:ERR-50008">No summary for method setY()</error>
      <error line="31" code="PPC:ERR-50015">Argument $inc is missing from the Docblock of incX</error>
      <error line="31" code="PPC:ERR-50008">No summary for method incX()</error>
      <error line="36" code="PPC:ERR-50015">Argument $inc is missing from the Docblock of incY</error>
      <error line="36" code="PPC:ERR-50008">No summary for method incY()</error>
      <error line="41" code="PPC:ERR-50015">Argument $dec is missing from the Docblock of decX</error>
      <error line="41" code="PPC:ERR-50008">No summary for method decX()</error>
      <error line="46" code="PPC:ERR-50015">Argument $dec is missing from the Docblock of decY</error>
      <error line="46" code="PPC:ERR-50008">No summary for method decY()</error>
      <error line="51" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="5" code="PPC:ERR-50007">No summary for property $x</error>
      <error line="6" code="PPC:ERR-50007">No summary for property $y</error>
    </parse_markers>
    <source>eJytk89uwjAMxu88hVVxaDVAGsexwmGPMGmip6rLAo3UOVXiTkRo704SQEv3Nx34kFifk+8XW8r9qq3bEdjA6pXrtmIcHmqbNlziYuQrrKm0hifOSKo57L3molXirSIO493iq2ZOl73YPTeCwaZDRkIilCWTqEl1jFKBZA0m4HeTBfYuxlQLDdMl7CDvcXpF44rmo/j+M3rLaZ1mcOd5fZbi1CkMkLGGRaRh3Au1e+FxKs5W82YzZCghNJZXpOfp/877POd/8QSyU382s4a3f3d5k/vDl4OLQWBzJfALP3dss7iOp7k/fDm4GAQ2VwKXJclHUgK3/mton37/O5I0gVnY+gySCfQ047QsCcnHdbU8AKfyMLg=</source>
  </file>
  <file path="Mask.php" generated-path="Mask.html" hash="d71a4be29f237f0a4e115987a2b4267a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SplFixedArray">\SplFixedArray</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon" line="7" package="Default">
      <extends/>
      <name>Mask</name>
      <full_name>\Chameleon\Mask</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon" line="8" package="Default">
        <name>$data</name>
        <full_name>\Chameleon\Mask::data</full_name>
        <default></default>
        <docblock line="8">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="10" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Mask::__construct()</full_name>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$initializeWith</name>
          <default>false</default>
          <type>\Chameleon\bool</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="21" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Mask::getWidth()</full_name>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="25" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Mask::getHeight()</full_name>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="29" package="Default">
        <name>getValueAt</name>
        <full_name>\Chameleon\Mask::getValueAt()</full_name>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon" line="33" package="Default">
        <name>setValueAt</name>
        <full_name>\Chameleon\Mask::setValueAt()</full_name>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>\Chameleon\bool</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Mask</error>
      <error line="10" code="PPC:ERR-50015">Argument $width is missing from the Docblock of __construct</error>
      <error line="10" code="PPC:ERR-50015">Argument $height is missing from the Docblock of __construct</error>
      <error line="10" code="PPC:ERR-50015">Argument $initializeWith is missing from the Docblock of __construct</error>
      <error line="10" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="21" code="PPC:ERR-50008">No summary for method getWidth()</error>
      <error line="25" code="PPC:ERR-50008">No summary for method getHeight()</error>
      <error line="29" code="PPC:ERR-50015">Argument $index is missing from the Docblock of getValueAt</error>
      <error line="29" code="PPC:ERR-50008">No summary for method getValueAt()</error>
      <error line="33" code="PPC:ERR-50015">Argument $index is missing from the Docblock of setValueAt</error>
      <error line="33" code="PPC:ERR-50015">Argument $value is missing from the Docblock of setValueAt</error>
      <error line="33" code="PPC:ERR-50008">No summary for method setValueAt()</error>
      <error line="8" code="PPC:ERR-50007">No summary for property $data</error>
    </parse_markers>
    <source>eJyNUk1PwzAMve9X+NBDy4YEVzo2TUjAhdMkdpyy1l0tQlol7j5A/HeStIO1W6f50FqJ/d7zi8fTMi8HYCPFRAqNoWFNCS95X6KBR7iPYn+txCeaUiQIT7lNJRYqHvibyiDMS/lMO0xnWot9c27hjIE3YT7g2x+4KDVtBCMEqWDRFPrzaiUpgaxSCVOhYLlMCmWlVAmHpBiCLaWcj8DnOdI65xGsikJCQIqYhKQvXBDnVnImpMHoiNRFwDkZuJ2AB7JVNWJ8vqhmcFV11ikzluwPAm56qg5gblRbrXDb9in0ONGRCy6yQkMYkG24i+1wMK7pXD4cdqc65bH/IssM8hzZwoy6/kRtkT+D/6z3MdbICzdpGMGDf4G2CI1cadVxOL4S+NU7dyVy1+bL0O9CVjhr9odUijvH4pfmMk3byBdvpG+/itmcYz4s68bdOBkGZda3oucesgZp+uNe+ccK6+908gvyThKS</source>
  </file>
  <file path="Colors/Hex6Color.php" generated-path="Colors.Hex6Color.html" hash="89fc025c33f6843bf0bada17cf069ee3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="7" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>Hex6Color</name>
      <full_name>\Chameleon\Colors\Hex6Color</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Color" refers="\Chameleon\Colors\Color" link="/classes/Chameleon.Colors.Color.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\Hex6Color::red</full_name>
        <default></default>
        <docblock line="13">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\Hex6Color::green</full_name>
        <default></default>
        <docblock line="20">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="27" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\Hex6Color::blue</full_name>
        <default></default>
        <docblock line="27">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="34" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex6Color::__construct()</full_name>
        <docblock line="34">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The 6-digit hexstring, e.g. #fe0da7&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="45" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex6Color::__toString()</full_name>
        <docblock line="45">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbb</long-description>
          <tag name="return" line="45" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="55" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::getHex()</full_name>
        <docblock line="55">
          <description>Get hexadecimal value for this color
Format: #rrggbb</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="65" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::setHex()</full_name>
        <docblock line="65">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="77" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\Hex6Color::getRed()</full_name>
        <docblock line="77">
          <description>Get RGB red channel</description>
          <long-description></long-description>
          <tag name="return" line="77" description="The value [0x00, 0xFF]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="87" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\Hex6Color::setRed()</full_name>
        <docblock line="87">
          <description>Set RGB red channel</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;The value [0x00, 0xFF]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="87" description="" type="\Chameleon\Colors\Hex6Color">
            <type>\Chameleon\Colors\Hex6Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="102" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\Hex6Color::getGreen()</full_name>
        <docblock line="102">
          <description>Get RGB green channel</description>
          <long-description></long-description>
          <tag name="return" line="102" description="The value [0x00, 0xFF]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="112" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\Hex6Color::setGreen()</full_name>
        <docblock line="112">
          <description>Set RGB green channel</description>
          <long-description></long-description>
          <tag name="param" line="112" description="&lt;p&gt;The value [0x00, 0xFF]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="112" description="" type="\Chameleon\Colors\Hex6Color">
            <type>\Chameleon\Colors\Hex6Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="125" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\Hex6Color::getBlue()</full_name>
        <docblock line="125">
          <description>Get RGB blue channel</description>
          <long-description></long-description>
          <tag name="return" line="125" description="The value [0x00, 0xFF]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="135" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\Hex6Color::setBlue()</full_name>
        <docblock line="135">
          <description>Set RGB blue channel</description>
          <long-description></long-description>
          <tag name="param" line="135" description="&lt;p&gt;The value [0x00, 0xFF]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="135" description="" type="\Chameleon\Colors\Hex6Color">
            <type>\Chameleon\Colors\Hex6Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="143" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Hex6Color::getRGBA()</full_name>
        <docblock line="143">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::getRGBA()" refers="\Chameleon\Colors\Color::getRGBA()" link="/classes/Chameleon.Colors.Color.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="147" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Hex6Color::fromRGBA()</full_name>
        <docblock line="147">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::fromRGBA()" refers="\Chameleon\Colors\Color::fromRGBA()" link="/classes/Chameleon.Colors.Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Hex6Color</error>
      <error line="143" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="147" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="147" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJy1V99P2zAQfuevuJU+JKhAhVYmwYANNNgbEp32MhByE+eHliaR40AltP99d07iuiFpUqFYArnJ+bv7zt/Zl69XaZDuAY6YLXmWMofDTYDTiCfx400SJSI731MGeWa++rFyeCrDJM4ef7Mo5/e5vPeukzx2M/3qvGFdAfn4cHf9XU1LcCdiWQY/+epUPQW+khyhoPj1pmxoHB8c6DkcwK+Ag+AuOAGLYx7BC4UCf6YTOJnNngxLc9G3FyYgjKXx7FjPU5FI7kjEHCNwGV2LZ19wHg/jW0Fv974gd4M4J+R23zdqqxzceSlyRyaizVvKBFsCWoWxD+OAr8opBX966IZ+KEE/nQA/8o9g3+NTl31pjjBfRKEDXh47pC54ftZBWO+82IZoaIxlEGZweAkZlygzy7A814b/WknfcVkxETwVPOOxZCqKxAMF7ZBSzSXm/DYRSybPYF8I318s2jImuMxFXDrqmQOZzJW5ZcNZFeIm9RJVZ8AvMtCbN2aKudwJl6zSmYc12Ux6MKJV0B0k8Z1M8jTlwhrtj+AIMPCAtrsij0VtNzxW9db0gmrB7pWq+W6p6l0qJqYCKZAnmOuWVOv8viSh2yu7ZVF0V9E6tAsK9xmLIcI7g5I9gRH+NdaVWmoU4AN3LbRDVlaWL9DcKMcJ0CFm21uW39FmbQE46QK4xvxtWf+5vn57feBdZl5CHZrH81dta3Vir6bId7q6vX3qWweUPaoDQtpe6eoG6yYx70+iECp5puuxm8i61Hnk9ZUiEaxcqILHtTWmoQfWJ80TS9b5+8Bin1u0ppDQbGbX5UtDBiJ5hZi/QmvfYo0QhLRcYGliNUUZCaVhZh2ro9Y+1LdnF3Ft9BmDy6uorn4CK9uUbirzXagYIivsh5FZQXTtpq6Wdo0p84+rTMGQziq8dqWZv5pVV2TqQreO3XtSyctsJAdXlzp6+4mraEO7ecx34GFIS5kPoyxFUjvpr6uFutc/KitCIVWVaLseXyovF9VXQIN105WEn3NqV/V3XfPeUuTaZKMpm9SUPNkMCBk038dlMBl140ZMnkiWKqh1QGPhL1g9qUZc+uOz7BzfJb9qDQmn7KPVVYxtYx/b8lztaV3Uib1hupGB4v/V5X/i2AtB</source>
  </file>
  <file path="Exceptions/ColorNotFoundException.php" generated-path="Exceptions.ColorNotFoundException.html" hash="b5815a20d101920e418c8120e6736e14" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Exceptions" line="6" package="Default">
      <extends>\Exception</extends>
      <name>ColorNotFoundException</name>
      <full_name>\Chameleon\Exceptions\ColorNotFoundException</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Exceptions" line="7" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Exceptions\ColorNotFoundException::__construct()</full_name>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Exceptions\ColorNotFoundException</error>
      <error line="7" code="PPC:ERR-50015">Argument $color is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJxNjsEKwjAMhu97ijgG04NPMN0OQ48+gTBqF7dC15YmhYH47nadTP9DCMn//cmpcaPLIMqICckJidCOsdVozf0yS3SsrKEqS6ZACNvwO5NaEEFrtfU3y1cbTL9ZAGdG09MPgleCFrnw0ErCMxiZNl0n4yX2QfK+kEve4c+9qOBRERxriK+SGBDOkKfDUK5ACXFvLIPHQRGjxx5icsLUFIldXm2J72ytTf0B2wBSAQ==</source>
  </file>
  <file path="Patterns/Pattern.php" generated-path="Patterns.Pattern.html" hash="edf7da064a8203afb654db2bdfb53c63" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SplFixedArray">\SplFixedArray</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <class final="false" abstract="true" namespace="Chameleon\Patterns" line="9" package="Default">
      <extends>\SplFixedArray</extends>
      <implements>\Chameleon\Patterns\IPattern</implements>
      <name>Pattern</name>
      <full_name>\Chameleon\Patterns\Pattern</full_name>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="15" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="19" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50005">No summary for class \Chameleon\Patterns\Pattern</error>
      <error line="11" code="PPC:ERR-50015">Argument $colors is missing from the Docblock of __construct</error>
      <error line="11" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="15" code="PPC:ERR-50015">Argument $index is missing from the Docblock of setColor</error>
      <error line="15" code="PPC:ERR-50015">Argument $color is missing from the Docblock of setColor</error>
      <error line="15" code="PPC:ERR-50008">No summary for method setColor()</error>
      <error line="19" code="PPC:ERR-50015">Argument $index is missing from the Docblock of getColor</error>
      <error line="19" code="PPC:ERR-50008">No summary for method getColor()</error>
    </parse_markers>
    <source>eJyNkDFrwzAQhXf/ihs6xNClq502lEBKtkJWg1HkcyOQT0I6g0Pof68qy3ZMW6gG6dC9977jtjt7sRmE06DUwuHGs1OSa75a9PAMT3kZ2yQ69FZIhP0llBoNVe+CGR35MouS3iOcrD6oAZtX58S1nL8Xz95o43x1jO9vgim0OqYqpYtzmExIhjCm95CagAMjNX4NBtVZjR0Se5hi4BZjvs9c2P6slYS2J8nKENS1NBQwveSNIoYHGafN77zRFvZEXBT38klazsrPbOE4wygZmwXlkeMKRo6iBodHGLeSsH9RTdsG8wkDM9mS/r/oj5/oHIoJvoY65D7sbs1+m9kr5njvXr4A3U64sA==</source>
  </file>
  <file path="Primitives/Ellipse.php" generated-path="Primitives.Ellipse.html" hash="060fc18c4ec39b0d48a5d25a37ee807e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="9" package="Default">
      <extends>\Chameleon\Primitives\Primitive</extends>
      <name>Ellipse</name>
      <full_name>\Chameleon\Primitives\Ellipse</full_name>
      <docblock line="9">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="9" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="10" package="Default">
        <name>$width</name>
        <full_name>\Chameleon\Primitives\Ellipse::width</full_name>
        <default></default>
        <docblock line="10">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="11" package="Default">
        <name>$height</name>
        <full_name>\Chameleon\Primitives\Ellipse::height</full_name>
        <default></default>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="20" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Ellipse::__construct()</full_name>
        <docblock line="20">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="20" description="&lt;p&gt;Center point&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="20" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="20" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="35" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Primitives\Ellipse::getWidth()</full_name>
        <docblock line="35">
          <description>Get width in px</description>
          <long-description></long-description>
          <tag name="return" line="35" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="45" package="Default">
        <name>setWidth</name>
        <full_name>\Chameleon\Primitives\Ellipse::setWidth()</full_name>
        <docblock line="45">
          <description>Set width in px</description>
          <long-description></long-description>
          <tag name="param" line="45" description="" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="45" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="55" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Primitives\Ellipse::getHeight()</full_name>
        <docblock line="55">
          <description>Get height in px</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="65" package="Default">
        <name>setHeight</name>
        <full_name>\Chameleon\Primitives\Ellipse::setHeight()</full_name>
        <docblock line="65">
          <description>Set height in px</description>
          <long-description></long-description>
          <tag name="param" line="65" description="" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="65" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="79" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Ellipse::draw()</full_name>
        <docblock line="79">
          <description>Draw the ellipse onto the image resource</description>
          <long-description>Draws the ellipse with border and background (if set).
By default, an ellipse has a 1px black border and no background</long-description>
          <tag name="param" line="79" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="79" description="" type="\Chameleon\Primitives\Ellipse">
            <type>\Chameleon\Primitives\Ellipse</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="9" code="PPC:ERR-50005">No summary for class \Chameleon\Primitives\Ellipse</error>
      <error line="10" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="11" code="PPC:ERR-50007">No summary for property $height</error>
    </parse_markers>
    <source>eJzNVl1v2jAUfedX3AceAupWdY9jtBts6/qG6D6lSpVJHGJh7Mh2CtXU/z7bCcH5cJqKTVoewMTnHt9zj33Nu6s0SQegH4a2WKYoxDBP9JBizu4WgmyJIg9YTgYWlEl3+jsOFRdvJi1TN1u0xm0Tc065+IxM4KN3Xt4tr2cf7LBYOKRISvhEKUk1HO8VZpGEMj/4bVHmSQV5QArDcEcilUya7xNM1okqeM1zPh6XYxjD3C4VciaVyEyezqSLe58igbZQFAGGKSdMwRwzhQXYHy1oA8kzg/yTMEj3PmCeKhRfdej5UVu2oiSEOGOhIpzB/X2ZflDN78zJ4MxdZOSU0DxDlRAJry5zJTAt4iftoFzLtFH0CqiQMW2xoIKTWM24iLBYIKVryQKWUTrykJbgrwkJNwxLGVx0YVG4WQueschD/uTdF9dYeTyr2CewygSDqv1+q9ZY/TCkwQjeWj+qNhRs1UL3yfa2X7b1XdkmRWIa99IiD1qOfEaVifftrq6N42rva5DnqJzo0BfL2tOiw+Z+PuHbngk3OsKpLhV6Kse/26fm2fWVoI/wjwLtQCW6kRcNnTPF7Qti7g3NJ3kmQuzG1ONlhWBH9DZa2UYAiEWwKs85BCQ2mkevXYbZI0Q4RhnVHRGxkiZBEhBcpHtYUc3gMjLukHY7ZS8/GFotJ1kVaZ2By+axSSsMSquOWdoLtN7Yra15mTVY4DWRug9a6E38jW0Y3zE/Wa1n28UNV0woxVFRxqCBqS6qT5QVtSxsDkZn0B5ySENHLLgkpij6FOYvfuqwl0f90qNnwvLLsRuTnwIPyBW6LAqM8wL6K9ugqt1iT4MOy+02/Rt2O0Q+q/+Zyfk/jb7muuj/x1Snfi801NdD88+ry8EfMAcEUw==</source>
  </file>
  <file path="Colors/Hex8Color.php" generated-path="Colors.Hex8Color.html" hash="a78d03f59c2f31b91c7a279d96018009" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="Hex6Color">\Chameleon\Colors\Hex6Color</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\Hex6Color</extends>
      <name>Hex8Color</name>
      <full_name>\Chameleon\Colors\Hex8Color</full_name>
      <docblock line="8">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color" refers="\Chameleon\Colors\Hex6Color" link="/classes/Chameleon.Colors.Hex6Color.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::alpha</full_name>
        <default></default>
        <docblock line="14">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="14" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\Hex6Color::red</full_name>
        <default></default>
        <docblock line="13">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\Hex6Color::green</full_name>
        <default></default>
        <docblock line="20">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="27" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\Hex6Color::blue</full_name>
        <default></default>
        <docblock line="27">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="21" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex8Color::__construct()</full_name>
        <docblock line="21">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;The 8-digit hexstring, e.g. #fe0da722&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::__construct()" refers="\Chameleon\Colors\Hex6Color::__construct()" link="/classes/Chameleon.Colors.Hex6Color.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="32" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex8Color::__toString()</full_name>
        <docblock line="32">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbbaa</long-description>
          <tag name="return" line="32" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::__toString()" refers="\Chameleon\Colors\Hex6Color::__toString()" link="/classes/Chameleon.Colors.Hex6Color.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="42" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex8Color::getHex()</full_name>
        <docblock line="42">
          <description>Get hexadecimal value for this color
Format: #rrggbbaa</description>
          <long-description></long-description>
          <tag name="return" line="42" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::getHex()" refers="\Chameleon\Colors\Hex6Color::getHex()" link="/classes/Chameleon.Colors.Hex6Color.html#method_getHex"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="57" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex8Color::setHex()</full_name>
        <docblock line="57">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="57" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="57" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::setHex()" refers="\Chameleon\Colors\Hex6Color::setHex()" link="/classes/Chameleon.Colors.Hex6Color.html#method_setHex"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="72" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::getAlpha()</full_name>
        <docblock line="72">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="72" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="81" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\Hex8Color::setAlpha()</full_name>
        <docblock line="81">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="81" description="&lt;p&gt;RGB alpha channel avalue [0x00, 0x7F]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="81" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="91" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Hex8Color::getRGBA()</full_name>
        <docblock line="91">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::getRGBA()" refers="\Chameleon\Colors\Hex6Color::getRGBA()" link="/classes/Chameleon.Colors.Hex6Color.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="95" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Hex8Color::fromRGBA()</full_name>
        <docblock line="95">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Hex6Color::fromRGBA()" refers="\Chameleon\Colors\Hex6Color::fromRGBA()" link="/classes/Chameleon.Colors.Hex6Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="34" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\Hex6Color::__construct()</full_name>
        <docblock line="34">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;The 6-digit hexstring, e.g. #fe0da7&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="45" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\Hex6Color::__toString()</full_name>
        <docblock line="45">
          <description>Get string representation of this color</description>
          <long-description>Format: #rrggbb</long-description>
          <tag name="return" line="45" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="55" package="Default">
        <name>getHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::getHex()</full_name>
        <docblock line="55">
          <description>Get hexadecimal value for this color
Format: #rrggbb</description>
          <long-description></long-description>
          <tag name="return" line="55" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="65" package="Default">
        <name>setHex</name>
        <full_name>\Chameleon\Colors\Hex6Color::setHex()</full_name>
        <docblock line="65">
          <description>Set hexadecimal value for this color</description>
          <long-description></long-description>
          <tag name="param" line="65" description="&lt;p&gt;The hexadecimal color value, Fomat: #rrggbb&lt;/p&gt;" type="string" variable="$hexstring">
            <type>string</type>
          </tag>
          <tag name="return" line="65" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hexstring</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="77" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\Hex6Color::getRed()</full_name>
        <docblock line="77">
          <description>Get RGB red channel</description>
          <long-description></long-description>
          <tag name="return" line="77" description="The value [0x00, 0xFF]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="87" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\Hex6Color::setRed()</full_name>
        <docblock line="87">
          <description>Set RGB red channel</description>
          <long-description></long-description>
          <tag name="param" line="87" description="&lt;p&gt;The value [0x00, 0xFF]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="87" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="102" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\Hex6Color::getGreen()</full_name>
        <docblock line="102">
          <description>Get RGB green channel</description>
          <long-description></long-description>
          <tag name="return" line="102" description="The value [0x00, 0xFF]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="112" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\Hex6Color::setGreen()</full_name>
        <docblock line="112">
          <description>Set RGB green channel</description>
          <long-description></long-description>
          <tag name="param" line="112" description="&lt;p&gt;The value [0x00, 0xFF]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="112" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="125" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\Hex6Color::getBlue()</full_name>
        <docblock line="125">
          <description>Get RGB blue channel</description>
          <long-description></long-description>
          <tag name="return" line="125" description="The value [0x00, 0xFF]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="135" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\Hex6Color::setBlue()</full_name>
        <docblock line="135">
          <description>Set RGB blue channel</description>
          <long-description></long-description>
          <tag name="param" line="135" description="&lt;p&gt;The value [0x00, 0xFF]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="135" description="" type="\Chameleon\Colors\Hex8Color">
            <type>\Chameleon\Colors\Hex8Color</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Hex6Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Hex8Color</error>
      <error line="91" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="95" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="95" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJy1VltP2zAUfudXnJU+pKhAV02Aym2ABntDgmkvAyE3PbloqRM5DlSa+O87di51W7sJmmYJ5MbfufrzOefsMouyHaDF2RzzjPkINxFtE0z5002apCI/3dGAIjePvi18zGSc8vzpJ0sKvC/kfXCdFnyWN0enFrlS5dN3XBzp7RbMw931VYXRID9heQ4keaK/Ai4kkjlodMEfjVPrcG+v2cMe/IgQWJJFDPyIcY4JvCqn4ddoCJ/Hx88G1hT7+soExFwa3w6bfSbiVyYR+lpx5aPF9o1226dMSVH4MhUuYxkTbA6EinkI/QgX1VY5f7I/i8NYQvN1CHgQHsBugKMZOx6P7S4W0yT2ISi4r+4DXl4aN7wNOwMjfWr1ZRTnsH8BOUpKsWcgTxvguzPsO5R1LAIzgTlyybQXaQBata/uzBQx97epmDM5gV0hwnA6ZcyVNYGyELwy1TELMn3UcG8Ak9rJ1eArrU0OwjIHnSOnXLEZ+vGc1VQLiJ/2sP9jqLXbLWHSmUyLLEPh9XZ7cLCCUcvzzEw84IxUnsHnowFcQm9EEkDBRook6zBl2nk2aDV1JxB5F2MV0GGuPm03eE131cVeiXOYqw7brV2p0tHFXAV02KtPByvmOpH18WNk7VywTJ1aSal5SGw3yW7lNyZBJ3ZXhclSySZayVo9Wzp4rpx+obKUUL9TlB9Cj/6sFU6LGqVQMZdwFJuXF1OCG4VxCNRPxnQPbvGSiW4F4zYFmltu+S9t8iVX3AqOagXOeti1BlL/tjXdlupG7dYiyZz9emvxq9/XRKvdXuKrNr6MzRHa48dDKx+KcqEcFrYFuBhRjKPF8e3zv76NMvil1fpZrOUhDsD71GSBaov/+4HxEL1SSnOacj5Ynw/UkpFI34DjGziHQK+n1ajntapvlaLvO3bGllk635yy1q/QykoLJdRUqRnRjJd2XqigGsiy2gqcDY2xQL1m4/dUl7hV5+1luPIsVzOR4WAg0rn2cOldX4RTtp58w8lmIC57N2xcUt0wlJ7V1rzZnizYprN2Qtd9sRO47lvutlX+v7z4C+n5Wrs=</source>
  </file>
  <file path="Colors/RGBAColor.php" generated-path="Colors.RGBAColor.html" hash="adfcd6eeb39acb487eca530263ff52de" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBColor">\Chameleon\Colors\RGBColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="7" package="Default">
      <extends>\Chameleon\Colors\RGBColor</extends>
      <name>RGBAColor</name>
      <full_name>\Chameleon\Colors\RGBAColor</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\RGBColor" refers="\Chameleon\Colors\RGBColor" link="/classes/Chameleon.Colors.RGBColor.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::alpha</full_name>
        <default></default>
        <docblock line="13">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="13" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\RGBColor::red</full_name>
        <default></default>
        <docblock line="13">
          <description>The red channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="13" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\RGBColor::green</full_name>
        <default></default>
        <docblock line="20">
          <description>The green channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="20" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="27" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\RGBColor::blue</full_name>
        <default></default>
        <docblock line="27">
          <description>The blue channel value [0, 255]</description>
          <long-description></long-description>
          <tag name="var" line="27" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="23" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBAColor::__construct()</full_name>
        <docblock line="23">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;RGB red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;RGB alpha channel value [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__construct()" refers="\Chameleon\Colors\RGBColor::__construct()" link="/classes/Chameleon.Colors.RGBColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="37" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBAColor::__toString()</full_name>
        <docblock line="37">
          <description>Get string representation of this color</description>
          <long-description>Format: rgba(red, green, blue, alpha)</long-description>
          <tag name="return" line="37" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::__toString()" refers="\Chameleon\Colors\RGBColor::__toString()" link="/classes/Chameleon.Colors.RGBColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="46" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::getAlpha()</full_name>
        <docblock line="46">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="46" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="56" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\RGBAColor::setAlpha()</full_name>
        <docblock line="56">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;RGB alpha channel avalue [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="56" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="66" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\RGBAColor::getRGBA()</full_name>
        <docblock line="66">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::getRGBA()" refers="\Chameleon\Colors\RGBColor::getRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\RGBAColor::fromRGBA()</full_name>
        <docblock line="70">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\RGBColor::fromRGBA()" refers="\Chameleon\Colors\RGBColor::fromRGBA()" link="/classes/Chameleon.Colors.RGBColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="36" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\RGBColor::__construct()</full_name>
        <docblock line="36">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="36" description="&lt;p&gt;The red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="36" description="&lt;p&gt;The blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="49" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\RGBColor::__toString()</full_name>
        <docblock line="49">
          <description>Get string representation of this color</description>
          <long-description>Format: rgb(red, green, blue)</long-description>
          <tag name="return" line="49" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="58" package="Default">
        <name>getRed</name>
        <full_name>\Chameleon\Colors\RGBColor::getRed()</full_name>
        <docblock line="58">
          <description>Get red channel value</description>
          <long-description></long-description>
          <tag name="return" line="58" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="68" package="Default">
        <name>setRed</name>
        <full_name>\Chameleon\Colors\RGBColor::setRed()</full_name>
        <docblock line="68">
          <description>Set the red channel value</description>
          <long-description></long-description>
          <tag name="param" line="68" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="return" line="68" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="83" package="Default">
        <name>getGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::getGreen()</full_name>
        <docblock line="83">
          <description>Get green channel value</description>
          <long-description></long-description>
          <tag name="return" line="83" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="93" package="Default">
        <name>setGreen</name>
        <full_name>\Chameleon\Colors\RGBColor::setGreen()</full_name>
        <docblock line="93">
          <description>Set green channel value</description>
          <long-description></long-description>
          <tag name="param" line="93" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="return" line="93" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="108" package="Default">
        <name>getBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::getBlue()</full_name>
        <docblock line="108">
          <description>Get blue channel value</description>
          <long-description></long-description>
          <tag name="return" line="108" description="The value [0, 255]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="118" package="Default">
        <name>setBlue</name>
        <full_name>\Chameleon\Colors\RGBColor::setBlue()</full_name>
        <docblock line="118">
          <description>Set blue channel value</description>
          <long-description></long-description>
          <tag name="param" line="118" description="&lt;p&gt;The value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="return" line="118" description="self" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\RGBColor</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\RGBAColor</error>
      <error line="66" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="70" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="70" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJydVU1v2zAMvfdXcEYOduCtW4FiQLK1a4ItxwLpsMtSFIpCx8YcyZDktMCw/17rI7bsxGkyHRKCIh/JR9L6clukxQVUh5ENyoJQhGlaiTlytpjynAs5vjAGpfSvvr9QLFTGmVz8InmJ96W6Tya8ZCtZX40P+FnIxXw2MZLDpjmREirlndECviiskGBnBn+NmT6Xw2EtwxB+pggkL1ICNCWMYQ5bnQ78/hjDp6vPj56t7/ZtSwRkTHm6y1ouRLYlCmFggF2KB2JPTda04kCJkiou+oIVRJCNDgcDgStdFej//Yyvrq8f+zzXApEZXyud573URtrZCOf5Wn6184lMe1SWyzyjkJSM6omAp6earnDHR+zVFzfZxl7wyBsAfQYqzSS8vwGJao6rUMNE416TmYYObYQjZpMqamhiHzG60/mELq3G7F/vlMxQQVVxxtZV0wuBEpkihgyegAGmesR9F1/+wcWGqBGI9ZKEhi1HlOXI5tE3eAJVKZgLf2KDFH8w5mEEo13ibfYdamBSCuBDw8/atiOqdEEM3Svbhp5LQ37PneXcXEbBqZz3zOsbVOmZ2/ck/zHqXt4jA3uQxLpM9615u7aH82s7YZf7K2ymCPPkpMrrLfEXeGT8OyRkCYTvagpoivTPnLA1uv2KwaYTdfdfH5UK/gwMn6H3AQoDA1NNVAevvd4e1/q0WwJf99+Bbv8Otu3APOgHzoxD89L1D8UxUKm/IB52IvjGgDfAA72dXd4cviattgyNpb+9Mfgqt7Vtpd3Wts5Ne+ujaH9vb14BJg07SA==</source>
  </file>
  <file path="Patterns/BackgroundColor.php" generated-path="Patterns.BackgroundColor.html" hash="aa6fc8864c1c4a5f85edc2d8496d68c9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SplFixedArray">\SplFixedArray</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="11" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>BackgroundColor</name>
      <full_name>\Chameleon\Patterns\BackgroundColor</full_name>
      <docblock line="11">
        <description>BackgroundColor represents a plain unicolor background, equivalent to background-color in CSS</description>
        <long-description></long-description>
        <tag name="package" line="11" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="12" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\BackgroundColor::__construct()</full_name>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="17" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\BackgroundColor::getColorAt()</full_name>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="15" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="19" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="12" code="PPC:ERR-50015">Argument $color is missing from the Docblock of __construct</error>
      <error line="12" code="PPC:ERR-50008">No summary for method __construct()</error>
      <error line="17" code="PPC:ERR-50015">Argument $x is missing from the Docblock of getColorAt</error>
      <error line="17" code="PPC:ERR-50015">Argument $y is missing from the Docblock of getColorAt</error>
      <error line="17" code="PPC:ERR-50008">No summary for method getColorAt()</error>
    </parse_markers>
    <source>eJx1UMtOwzAQvOcr9tBDUgUVrilQlUhI3JByrRS5zja1MLax1ygR4t+xnEdTED54Le/Mzs7c78zZJBBOg1wyi6kjKzjV1Bt08AB32Ta2FXtHZxhHKM/hKVGrwysjQqvcNokQ7xAqI59Fh83eWtZv5+8Lp9RSW3d4iXUkbtbrWGENT4y/tVZ71UQAWDQWHSpywMBIJhR4JXjsHWdsDvjhxSeTAQikF52bARpoZVWNIptYg1vn/uhhR6gaB6M1+Bo44Rh/lILDyStOQiuoa65VCMtzSgc3sIpi2YIUiSFVRUWxJEyp/sY4pDgqvc2naRfgd/LvMu3I21MqQgSrLodY+wwKGLe73soi+eBvEm5n4SvB4d49/gCAd6ji</source>
  </file>
  <file path="Colors/IColor.php" generated-path="Colors.IColor.html" hash="29625b020b9a8c460145711b7d664660" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <interface namespace="Chameleon\Colors" line="6" package="Default">
      <name>IColor</name>
      <full_name>\Chameleon\Colors\IColor</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="12" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\IColor::getRGBA()</full_name>
        <docblock line="12">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="return" line="12" description="" type="\Chameleon\Colors\RGBAColor">
            <type>\Chameleon\Colors\RGBAColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="19" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\IColor::isTransparent()</full_name>
        <docblock line="19">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="return" line="19" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\IColor::fromRGBA()</full_name>
        <docblock line="26">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="return" line="26" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50009">No summary for interface \Chameleon\Colors\IColor</error>
      <error line="26" code="PPC:ERR-50015">Argument $color is missing from the Docblock of fromRGBA</error>
    </parse_markers>
    <source>eJyNkTtPAzEQhPv7FVNQkGvSE0SAk4hoEWUax9njLF12LXtNg/jvnK3InOB4bDXax/jT+HrrB99gKjYnit5YQjdMciThfSejhLhpykKK30f7p939XZHnJcdKoc8uj6WNt9LOtW7bqtFiRwodCNkBgXygSKxGnTCkLyObHWY38/PbQJoCowLMhuuqfTqMzqJPbIvxC2k+uFzhCl/RFxgfHB8hSeFmQHARGgxPYYWJ+A++g8j4LzQXnz9NC2A+3dT9nxg74aghWUUf5ASzHMkS2qu4429oMf/GjDD7l/TqA7goiazOCb4325sPNPOdOA==</source>
  </file>
  <file path="Colors/HSVColor.php" generated-path="Colors.HSVColor.html" hash="62c47b6ae804b44d3b67c991f68d4e08" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="13" package="Default">
      <extends>\Chameleon\Colors\Color</extends>
      <name>HSVColor</name>
      <full_name>\Chameleon\Colors\HSVColor</full_name>
      <docblock line="13">
        <description>Color Class for HSV colors</description>
        <long-description>Represents a color based on the HSV (hue, saturation, value) system</long-description>
        <tag name="api" line="13" description=""/>
        <tag name="package" line="13" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\Color" refers="\Chameleon\Colors\Color" link="/classes/Chameleon.Colors.Color.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSVColor::hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSVColor::saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$value</name>
        <full_name>\Chameleon\Colors\HSVColor::value</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSVColor::red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSVColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSVColor::blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSVColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="32" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSVColor::__toString()</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="42" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSVColor::getHue()</full_name>
        <docblock line="42">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="42" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="53" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSVColor::setHue()</full_name>
        <docblock line="53">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="53" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="53" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSVColor::getSaturation()</full_name>
        <docblock line="70">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="70" description="saturation value [0, 1]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="81" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSVColor::setSaturation()</full_name>
        <docblock line="81">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="81" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="integer" variable="$saturation">
            <type>integer</type>
          </tag>
          <tag name="return" line="81" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="98" package="Default">
        <name>getValue</name>
        <full_name>\Chameleon\Colors\HSVColor::getValue()</full_name>
        <docblock line="98">
          <description>Get value</description>
          <long-description>Returns the value of this color</long-description>
          <tag name="return" line="98" description="value [0, 1]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="109" package="Default">
        <name>setValue</name>
        <full_name>\Chameleon\Colors\HSVColor::setValue()</full_name>
        <docblock line="109">
          <description>Set value</description>
          <long-description>Sets the value of this color</long-description>
          <tag name="param" line="109" description="&lt;p&gt;The value [0, 1]&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="109" description="" type="\Chameleon\Colors\HSVColor">
            <type>\Chameleon\Colors\HSVColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="127" package="Default">
        <name>setRGB</name>
        <full_name>\Chameleon\Colors\HSVColor::setRGB()</full_name>
        <docblock line="127">
          <description>Set RGB equivalent</description>
          <long-description></long-description>
          <tag name="param" line="127" description="&lt;p&gt;Red value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="127" description="&lt;p&gt;Red value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="127" description="&lt;p&gt;Red value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$red</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$green</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$blue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="133" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSVColor::makeRGB()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="165" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSVColor::getRGBA()</full_name>
        <docblock line="165">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::getRGBA()" refers="\Chameleon\Colors\Color::getRGBA()" link="/classes/Chameleon.Colors.Color.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="169" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSVColor::fromRGBA()</full_name>
        <docblock line="169">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\Color::fromRGBA()" refers="\Chameleon\Colors\Color::fromRGBA()" link="/classes/Chameleon.Colors.Color.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="26" code="PPC:ERR-50015">Argument $saturation is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $saturation does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $saturation in __construct()</error>
      <error line="26" code="PPC:ERR-50015">Argument $value is missing from the Docblock of __construct</error>
      <error line="26" code="PPC:ERR-50014">Name of argument $value does not match with the DocBlock's name $hue in __construct()</error>
      <error line="26" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $value in __construct()</error>
      <error line="32" code="PPC:ERR-50008">No summary for method __toString()</error>
      <error line="127" code="PPC:ERR-50014">Name of argument $green does not match with the DocBlock's name $red in setRGB()</error>
      <error line="127" code="PPC:ERR-50014">Name of argument $blue does not match with the DocBlock's name $red in setRGB()</error>
      <error line="133" code="PPC:ERR-50008">No summary for method makeRGB()</error>
      <error line="165" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="169" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="169" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $hue</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $saturation</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $value</error>
      <error line="18" code="PPC:ERR-50007">No summary for property $red</error>
      <error line="19" code="PPC:ERR-50007">No summary for property $green</error>
      <error line="20" code="PPC:ERR-50007">No summary for property $blue</error>
    </parse_markers>
    <source>eJy9WN9v2jAQfu9fcUM8BJRBu62VVsbWtZq6t0ml2staVSY4JCokqe20nab97zvbIXGckBlWLRJg7Lv77sd3tuHDpyzKDgCfhKwpz0hA4SLC4Yqmyc1FukoZnxwogZybS1+eA5qJOE34zXeyyum3XHwLz9M8WfByadKip03eXF2ef1bDwvh4OFSfQ1CzcLEinEOIo6+z7xAoJS1QiF3RjFFOE8GB6HWYE04XkCYgIqrUvCinPnAickakPz48SlcHwH9yQdeFpTOSxXo4Vh+BgkZ97Ql9FhSDKvz6pUTkk7H4kQgKfQSZNGcr1JZF5UYRuV5IBQ0Eet9ndDFpm18ySpPWlXnd1iaTRTZVMAGWSbA8ECkz1s4ywsga4kSoIOArvpRn8OPQh7fH728r4XGFnM9XcQBhngQyOri7K617G1M+hKuUCDML5VRRgiqR8umLKObw+iNwKtANTxoZTLaKzEqzngHRoaAo6hXYldjvg46wRDoTLE6W3gBOgauh5TWjCJ1AL+KPXg9GFaLM5gh6PtRmK09bFnXicX7Qa/WvXtZLKhSI0qrmDYkr5RtXvVBKQhqCAlQNY1KhCEUWcD8aLHXhZK6kkdZEmflxCHL21yBRwjlCi+zXNa1mpGVKOF2FLgkomLsBUKRBVSsTcQjeqzIPQUSD+yuSLDXjfdBuDOz2kI+IWPoECX2Crfut10MjSKyarXpTGMmWT42xU2svqwmsyT3FTdsbTA62ltaRuEYfuPHXVnCicUNJ1vjIlcvGDiMrqfeublK37fid3HbKQ0lx9yQYTDeUrtts2DnZh/VGqhq7/s5dYB4Y0rf9W6GyJDuiYdetLYyETdvP9Jr4CzaJW2e4t8MePaAPTVf6F3eavwY36wyupLs7x7XkdURfkNM69PqNZUcmK61/JbEyIvlrWnOjrk7GtLxstgrtTNiOoqIdoA85XnFXeC3fUiy83iKBF0ap3hwf3/4PYaPexTXcLLhMgjThFzdtX9+rt95TJdoUmKyX0kNnEG7bDVSZrOT1106NuS5eoaC+2fLm5dWOqKyr7X8Uo1Xkdcq82tk/hpND25cQRVuk4LU0YxGmn0mq1bk3BO9ICjc3UxvpYRdlXOqHjbztaEEvhQOb+PwpFkGEYUdxW9MG+BMTDk/b50+a87WabmhWcxOJJvCVWQFtnjmj5L65pPCOHPEefGhg7oP3xhEva8ETe+C93QGvEeMeeO9c6yfz9wJ4x3vyRcW7G551YlSjrvNf/kejjv/yz5r2K4A8w0oRz9wifWsL9OsbHJ5nnT/GucB2NXwKWbpWTlUO9dlyTuxOHY9N10ajkQmi3z99/ANSgdmL</source>
  </file>
  <file path="Primitives/Line.php" generated-path="Primitives.Line.html" hash="9c1eeaddcf23f59adb578f92d862f42b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <namespace-alias name="IPrimitive">\Chameleon\Primitives\IPrimitive</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="11" package="Default">
      <extends/>
      <implements>\Chameleon\Primitives\IPrimitive</implements>
      <name>Line</name>
      <full_name>\Chameleon\Primitives\Line</full_name>
      <docblock line="11">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="11" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="12" package="Default">
        <name>$start</name>
        <full_name>\Chameleon\Primitives\Line::start</full_name>
        <default></default>
        <docblock line="12">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="13" package="Default">
        <name>$end</name>
        <full_name>\Chameleon\Primitives\Line::end</full_name>
        <default></default>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="14" package="Default">
        <name>$color</name>
        <full_name>\Chameleon\Primitives\Line::color</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="15" package="Default">
        <name>$thickness</name>
        <full_name>\Chameleon\Primitives\Line::thickness</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="23" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Line::__construct()</full_name>
        <docblock line="23">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="23" description="&lt;p&gt;Start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="23" description="&lt;p&gt;End vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="36" package="Default">
        <name>getStart</name>
        <full_name>\Chameleon\Primitives\Line::getStart()</full_name>
        <docblock line="36">
          <description>Get start vector</description>
          <long-description></long-description>
          <tag name="return" line="36" description="the start vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="46" package="Default">
        <name>setStart</name>
        <full_name>\Chameleon\Primitives\Line::setStart()</full_name>
        <docblock line="46">
          <description>Set start vector</description>
          <long-description></long-description>
          <tag name="param" line="46" description="&lt;p&gt;The start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$start">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="46" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="57" package="Default">
        <name>getEnd</name>
        <full_name>\Chameleon\Primitives\Line::getEnd()</full_name>
        <docblock line="57">
          <description>Get end vector</description>
          <long-description></long-description>
          <tag name="return" line="57" description="The end vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="67" package="Default">
        <name>setEnd</name>
        <full_name>\Chameleon\Primitives\Line::setEnd()</full_name>
        <docblock line="67">
          <description>Set end vector</description>
          <long-description></long-description>
          <tag name="param" line="67" description="&lt;p&gt;The end vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$end">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="67" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="78" package="Default">
        <name>getThickness</name>
        <full_name>\Chameleon\Primitives\Line::getThickness()</full_name>
        <docblock line="78">
          <description>Get line thickness in px</description>
          <long-description></long-description>
          <tag name="return" line="78" description="thickness in px" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="88" package="Default">
        <name>setThickness</name>
        <full_name>\Chameleon\Primitives\Line::setThickness()</full_name>
        <docblock line="88">
          <description>Set line thickness</description>
          <long-description></long-description>
          <tag name="param" line="88" description="&lt;p&gt;Thickness in px&lt;/p&gt;" type="integer" variable="$thickness">
            <type>integer</type>
          </tag>
          <tag name="return" line="88" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$thickness</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="99" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Primitives\Line::getColor()</full_name>
        <docblock line="99">
          <description>Get line color</description>
          <long-description></long-description>
          <tag name="return" line="99" description="the color" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="109" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Primitives\Line::setColor()</full_name>
        <docblock line="109">
          <description>Set line color</description>
          <long-description></long-description>
          <tag name="param" line="109" description="&lt;p&gt;The color&lt;/p&gt;" type="\Chameleon\Colors\IColor" variable="$color">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
          <tag name="return" line="109" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="120" package="Default">
        <name>getPosition</name>
        <full_name>\Chameleon\Primitives\Line::getPosition()</full_name>
        <docblock line="120">
          <description>Get position of the line (alias for Line::getStart)</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::getPosition()" refers="\Chameleon\Primitives\IPrimitive::getPosition()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_getPosition"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="132" package="Default">
        <name>setPosition</name>
        <full_name>\Chameleon\Primitives\Line::setPosition()</full_name>
        <docblock line="132">
          <description>Set position of the line</description>
          <long-description>Moves the line to a new position, changing both the start and end vectors</long-description>
          <tag name="param" line="132" description="&lt;p&gt;The new position of the start vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$position">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="132" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::setPosition()" refers="\Chameleon\Primitives\IPrimitive::setPosition()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_setPosition"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$position</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="149" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Line::draw()</full_name>
        <docblock line="149">
          <description>Draw the line onto the specified image</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The image&lt;/p&gt;" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="149" description="" type="\Chameleon\Primitives\Line">
            <type>\Chameleon\Primitives\Line</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Primitives\IPrimitive::draw()" refers="\Chameleon\Primitives\IPrimitive::draw()" link="/classes/Chameleon.Primitives.IPrimitive.html#method_draw"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="11" code="PPC:ERR-50005">No summary for class \Chameleon\Primitives\Line</error>
      <error line="12" code="PPC:ERR-50007">No summary for property $start</error>
      <error line="13" code="PPC:ERR-50007">No summary for property $end</error>
      <error line="14" code="PPC:ERR-50007">No summary for property $color</error>
      <error line="15" code="PPC:ERR-50007">No summary for property $thickness</error>
    </parse_markers>
    <source>eJytV1tP2zAUfudX+IGHBBUh9tgO2MY2VGmTELBplZCQSZzWInUi2+Wiif+O7bixHce5FCxRovhcv+/4+OTzWbkq94BYBK4RK2GCwPlKPOaoILeXFK8xx4+IzfaU0IbZ2/M1XKJZy8ZflPCCfmrbOi/ygv6Ecv8luM9u5+p/h8DVxbevQRkT9+28ftYpJDlkDPzCBAG8LnO0RoQzYMTAfyUmV0nxI+QI7DMOKZ/57xFJW94mJiznPV/h5IEgtgVTrqODg/oZHIBzFVxSEMbpRmJkbdpyX0pI4RponHWA4Fr9PqKGoictwgY/xJ8neWSC3tznOAHZhiQcFwTc3dVBRa7XiWM3tuCTSybNwOEpqCI88bB0hGRgJxrWdokaQyF3HLCi8Bf7dqlNp5xCIuqbCrqj2Gi+Brm4QFxH7eHkgEsR31BSo8BXKKQWhneJuCIvisG0tuQiqd24gA7J43pgHq0ldRPOps6coTwblCXbZuk6kTlLG7uUThCioQyjtnPQxa9EpFWpk11x3EZw6/SVbmb74285/MEcduJU5ub2gG4+7VNuC7yby1w2ddMhMAHlcw+rmPAOjU5Kb7ZqilhpqJtUq/33p3PtpdNNr3RvLhhwE0xpJ4ZNqq6fPqbtbr3fkr9cH8O66vk9XFczhWrQTfFOopWaIllb6Oa5cf0P4Lgz+Ipf7bmaLdT5bSrtRGyVmmO8j9Pt7docc+R6N5dlwbCKrcgUTwqeCOYYMpAJt3Jsm063t2U8rGUP5flSOx/RqM29PZTwtgxtGfv5dyEmWIMDLwAEBD3VNiYgWUGyxGQJ7gu+skYPKFqsafA9vaPu3XVssr5sR9tgP3ISqNH23IcqMH3WbcSaCioO/gnKDt0Lpt5oDInpS8jIImRk4Rnx1Jl0ZfCrnQ9RXHiKi7CijirkTyaQPvcrt/pUyi9xY/Qee4y/U/hkarYgompV6ZQowRlGqfjqEl+NPd1OioB9JamKsakzvuJSEVZk2w1UGc5A5Pa65ieNgrQKTYhQtMSMI6pa6Dz7Qx5I8USaJmaeBe+Fsiioqa/JyDgR/KjQrxArNjRBUTxxepA1imhX7eYlJZG35SbU5qtdxW+CphAnI1UWQ1SqIXqED1tBFnhAw879SvOJ0uputM3pQSD2rHSCPoLT40ahvA47itXv2eneG68oodg=</source>
  </file>
  <file path="Exceptions/ValueOutOfBoundsException.php" generated-path="Exceptions.ValueOutOfBoundsException.html" hash="05229277680b9ddffbccd598f5b14982" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Exception">\Exception</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Exceptions" line="6" package="Default">
      <extends>\Exception</extends>
      <name>ValueOutOfBoundsException</name>
      <full_name>\Chameleon\Exceptions\ValueOutOfBoundsException</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Exceptions" line="7" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Exceptions\ValueOutOfBoundsException::__construct()</full_name>
        <docblock line="7">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$valueName</name>
          <default></default>
          <type>\Chameleon\Exceptions\string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type>\Chameleon\Exceptions\float</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Exceptions\ValueOutOfBoundsException</error>
      <error line="7" code="PPC:ERR-50015">Argument $valueName is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $value is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $min is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50015">Argument $max is missing from the Docblock of __construct</error>
      <error line="7" code="PPC:ERR-50008">No summary for method __construct()</error>
    </parse_markers>
    <source>eJxNT01PwzAMvfdXPKZJBQl+wWCTQFzZjQtDU8jcNVLmRI3DKk3773Pa0eFDYr+8D+d5FdtYQYvNgVI0lvDWausp8Oa9txTFBU6LaiDlRJjAK2a9SQmfxmdaZ1k3ryHzLk0sUC+kwE2H06ArFfOPdxZNZju8bLdWw6TLVu71crzH/Lc4f+hKj2h8MHJFpung+Nab/uGffam5tC7haQn9XjJ7wgtmw7KoR6MaTej+hpJTQwUcBEenWoa0BON9ONIOjoU6ZeJrzC2J33ezxRR5rsZztbwA/0Ju3Q==</source>
  </file>
  <file path="Colors/HSLAColor.php" generated-path="Colors.HSLAColor.html" hash="f49fe3688314375ad5f0d97b276f544b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ValueOutOfBoundsException">\Chameleon\Exceptions\ValueOutOfBoundsException</namespace-alias>
    <namespace-alias name="HSLColor">\Chameleon\Colors\HSLColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Colors" line="8" package="Default">
      <extends>\Chameleon\Colors\HSLColor</extends>
      <name>HSLAColor</name>
      <full_name>\Chameleon\Colors\HSLAColor</full_name>
      <docblock line="8">
        <description>Color Class for HSL colors</description>
        <long-description>Represents a color based on the HSL (hue, saturation, value) system</long-description>
        <tag name="package" line="8" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Colors\HSLColor" refers="\Chameleon\Colors\HSLColor" link="/classes/Chameleon.Colors.HSLColor.html"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$alpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::alpha</full_name>
        <default></default>
        <docblock line="14">
          <description>The alpha channel value [0, 127]</description>
          <long-description></long-description>
          <tag name="var" line="14" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="14" package="Default">
        <name>$hue</name>
        <full_name>\Chameleon\Colors\HSLColor::hue</full_name>
        <default></default>
        <docblock line="14">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="15" package="Default">
        <name>$saturation</name>
        <full_name>\Chameleon\Colors\HSLColor::saturation</full_name>
        <default></default>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Colors" line="16" package="Default">
        <name>$lightness</name>
        <full_name>\Chameleon\Colors\HSLColor::lightness</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="18" package="Default">
        <name>$red</name>
        <full_name>\Chameleon\Colors\HSLColor::red</full_name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="19" package="Default">
        <name>$green</name>
        <full_name>\Chameleon\Colors\HSLColor::green</full_name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Chameleon\Colors" line="20" package="Default">
        <name>$blue</name>
        <full_name>\Chameleon\Colors\HSLColor::blue</full_name>
        <default></default>
        <docblock line="20">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="24" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLAColor::__construct()</full_name>
        <docblock line="24">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="24" description="&lt;p&gt;RGB red channel value [0, 255]&lt;/p&gt;" type="integer" variable="$red">
            <type>integer</type>
          </tag>
          <tag name="param" line="24" description="&lt;p&gt;RGB green channel value [0, 255]&lt;/p&gt;" type="integer" variable="$green">
            <type>integer</type>
          </tag>
          <tag name="param" line="24" description="&lt;p&gt;RGB blue channel value [0, 255]&lt;/p&gt;" type="integer" variable="$blue">
            <type>integer</type>
          </tag>
          <tag name="param" line="24" description="&lt;p&gt;RGB alpha channel value [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::__construct()" refers="\Chameleon\Colors\HSLColor::__construct()" link="/classes/Chameleon.Colors.HSLColor.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>\Chameleon\Colors\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="38" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLAColor::__toString()</full_name>
        <docblock line="38">
          <description>Get string representation of this color</description>
          <long-description>Format: hsla(hue, saturation, lightness, alpha)</long-description>
          <tag name="return" line="38" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::__toString()" refers="\Chameleon\Colors\HSLColor::__toString()" link="/classes/Chameleon.Colors.HSLColor.html#method___toString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="47" package="Default">
        <name>getAlpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::getAlpha()</full_name>
        <docblock line="47">
          <description>Get RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="return" line="47" description="RGB alpha channel avalue [0, 127]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="56" package="Default">
        <name>setAlpha</name>
        <full_name>\Chameleon\Colors\HSLAColor::setAlpha()</full_name>
        <docblock line="56">
          <description>Set RGB alpha channel value</description>
          <long-description></long-description>
          <tag name="param" line="56" description="&lt;p&gt;RGB alpha channel avalue [0, 127]&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="return" line="56" description="" type="\Chameleon\Colors\HSLAColor">
            <type>\Chameleon\Colors\HSLAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="66" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\HSLAColor::getRGBA()</full_name>
        <docblock line="66">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::getRGBA()" refers="\Chameleon\Colors\HSLColor::getRGBA()" link="/classes/Chameleon.Colors.HSLColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\HSLAColor::fromRGBA()</full_name>
        <docblock line="70">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\HSLColor::fromRGBA()" refers="\Chameleon\Colors\HSLColor::fromRGBA()" link="/classes/Chameleon.Colors.HSLColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Colors\HSLColor::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>\Chameleon\Colors\float</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="32" package="Default">
        <name>__toString</name>
        <full_name>\Chameleon\Colors\HSLColor::__toString()</full_name>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="42" package="Default">
        <name>getHue</name>
        <full_name>\Chameleon\Colors\HSLColor::getHue()</full_name>
        <docblock line="42">
          <description>Get hue value</description>
          <long-description>Returns the hue value of this color</long-description>
          <tag name="return" line="42" description="Hue value [0, 359]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="53" package="Default">
        <name>setHue</name>
        <full_name>\Chameleon\Colors\HSLColor::setHue()</full_name>
        <docblock line="53">
          <description>Set hue value</description>
          <long-description>Sets the hue value of this color</long-description>
          <tag name="param" line="53" description="&lt;p&gt;The hue value [0, 359]&lt;/p&gt;" type="integer" variable="$hue">
            <type>integer</type>
          </tag>
          <tag name="return" line="53" description="" type="\Chameleon\Colors\HSLAColor">
            <type>\Chameleon\Colors\HSLAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hue</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="70" package="Default">
        <name>getSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::getSaturation()</full_name>
        <docblock line="70">
          <description>Get saturation value</description>
          <long-description>Returns the saturation value of this color</long-description>
          <tag name="return" line="70" description="saturation value [0, 1]" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="81" package="Default">
        <name>setSaturation</name>
        <full_name>\Chameleon\Colors\HSLColor::setSaturation()</full_name>
        <docblock line="81">
          <description>Set saturation value</description>
          <long-description>Sets the saturation value of this color</long-description>
          <tag name="param" line="81" description="&lt;p&gt;The saturation value [0, 1]&lt;/p&gt;" type="integer" variable="$saturation">
            <type>integer</type>
          </tag>
          <tag name="return" line="81" description="" type="\Chameleon\Colors\HSLAColor">
            <type>\Chameleon\Colors\HSLAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$saturation</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="98" package="Default">
        <name>getLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::getLightness()</full_name>
        <docblock line="98">
          <description>Get lightness</description>
          <long-description>Returns the lightness of this color</long-description>
          <tag name="return" line="98" description="lightness [0, 1]" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="109" package="Default">
        <name>setLightness</name>
        <full_name>\Chameleon\Colors\HSLColor::setLightness()</full_name>
        <docblock line="109">
          <description>Set lightness</description>
          <long-description>Sets the lightness of this color</long-description>
          <tag name="param" line="109" description="&lt;p&gt;The lightness [0, 1]&lt;/p&gt;" type="integer" variable="$lightness">
            <type>integer</type>
          </tag>
          <tag name="return" line="109" description="" type="\Chameleon\Colors\HSLAColor">
            <type>\Chameleon\Colors\HSLAColor</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$lightness</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="120" package="Default">
        <name>makeRGB</name>
        <full_name>\Chameleon\Colors\HSLColor::makeRGB()</full_name>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Colors" line="138" package="Default">
        <name>hue2rgb</name>
        <full_name>\Chameleon\Colors\HSLColor::hue2rgb()</full_name>
        <docblock line="138">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$p</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$q</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$t</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\HSLColor</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\Chameleon\Colors\Color</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="8" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\HSLAColor</error>
      <error line="24" code="PPC:ERR-50014">Name of argument $hue does not match with the DocBlock's name $red in __construct()</error>
      <error line="24" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $hue in __construct()</error>
      <error line="24" code="PPC:ERR-50014">Name of argument $saturation does not match with the DocBlock's name $green in __construct()</error>
      <error line="24" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $saturation in __construct()</error>
      <error line="24" code="PPC:ERR-50014">Name of argument $lightness does not match with the DocBlock's name $blue in __construct()</error>
      <error line="24" code="PPC:ERR-50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $lightness in __construct()</error>
      <notice line="24" code="PPC:ERR-50013">Parameter $red could not be found in __construct()</notice>
      <notice line="24" code="PPC:ERR-50013">Parameter $green could not be found in __construct()</notice>
      <notice line="24" code="PPC:ERR-50013">Parameter $blue could not be found in __construct()</notice>
      <error line="66" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="70" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="70" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
    </parse_markers>
    <source>eJydVd9v2jAQfuevuCEeEpTBVqmaBFu7Fm3tQ6VKZepLqSqTXn5owY5sh1aa+N9nO8ExIWEwv+Rif3f+7u6z/fUyT/IeqEHJCkVOQoRZoswMGV3MWMa4mPYMoBDu0o/3EHOZMioWjyQr8L6Q99E1K+irsEvTFr8y5OJ2fmesA5CHm+urCmNAYUaEAOVYzgK+S1S7wTYU/DEwPcbDobVhCL8SBJLlCYEwIZRiBmtNGZ4+BfD57Muzg3Xdvq8Jh5RKZ25s7ZynayIRBiZwRbFl75lhHao6SV6EkvGuzXLCyUpvBwOOr6CyB/3dZ3x2fv7c5RlzRGp8S+s076UGaWdjnOZb1lc7H1lpp5TFMktDiAoaatXAy4stl2diJwUGEGWMKFsQWXCicXYqS+NEUhTCzhgKviMIPQYySQV8vACB8rZAT4f1p52Qud3IczY94HC3peHVjA7ArzRHr6JawzadSrpBCaoqKY2VMHKOAqk0nIBFYAKH+hi4Lq79k/EVkRNIREY8U1G3lE4NS0ZdMuWonGhF5Mh2SjY3cM+HyTaF3d5UUfuGXB9GdaXislm+musH0FxymtSBqLvSASj7YBb9/rF96ND5P4qmxbzvSf7jiDi8JyZsazltmtUdVefWkdr89NSOuAK6E6zlhFl0VOL24NQ7GlEp/0YN0gi8D7YCYYLh7wdCY6yOXAAlHb95TeghE87egOIbdL5tXt+EUYJqxNs98Zudv/bLoKzWt/2npNnKVnW2SEO/nEYZ9glt14dO0EI8y0c9O4FzRPRD4vzrtyFokG+/vypmQt9SDsGIs5VhWLMb8Hi5d1+Pxy7P0WjUFPCmd3nxF6K8XK0=</source>
  </file>
  <file path="Colors/Color.php" generated-path="Colors.Color.html" hash="f46605fddd51245b02ab06bcc12fec13" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <class final="false" abstract="true" namespace="Chameleon\Colors" line="6" package="Default">
      <extends/>
      <implements>\Chameleon\Colors\IColor</implements>
      <name>Color</name>
      <full_name>\Chameleon\Colors\Color</full_name>
      <docblock line="6">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="6" description="Default"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Chameleon\Colors" line="7" package="Default">
        <name>getRGBA</name>
        <full_name>\Chameleon\Colors\Color::getRGBA()</full_name>
        <docblock line="7">
          <description>Get the RGBA representation of the color</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::getRGBA()" refers="\Chameleon\Colors\IColor::getRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_getRGBA"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="true" visibility="public" namespace="Chameleon\Colors" line="8" package="Default">
        <name>fromRGBA</name>
        <full_name>\Chameleon\Colors\Color::fromRGBA()</full_name>
        <docblock line="8">
          <description>Construct from an RGBAColor</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::fromRGBA()" refers="\Chameleon\Colors\IColor::fromRGBA()" link="/classes/Chameleon.Colors.IColor.html#method_fromRGBA"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$rgba</name>
          <default></default>
          <type>\Chameleon\Colors\RGBAColor</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Colors" line="10" package="Default">
        <name>isTransparent</name>
        <full_name>\Chameleon\Colors\Color::isTransparent()</full_name>
        <docblock line="10">
          <description>Find out if the color is transparent</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\Chameleon\Colors\IColor::isTransparent()" refers="\Chameleon\Colors\IColor::isTransparent()" link="/classes/Chameleon.Colors.IColor.html#method_isTransparent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Colors" line="22" package="Default">
        <name>checkRange</name>
        <full_name>\Chameleon\Colors\Color::checkRange()</full_name>
        <docblock line="22">
          <description>Check if a value is in a legal range</description>
          <long-description></long-description>
          <tag name="param" line="22" description="" type="" variable="$value"/>
          <tag name="param" line="22" description="" type="" variable="$min"/>
          <tag name="param" line="22" description="" type="" variable="$max"/>
          <tag name="return" line="22" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="6" code="PPC:ERR-50005">No summary for class \Chameleon\Colors\Color</error>
      <error line="7" code="PPC:ERR-50008">No summary for method getRGBA()</error>
      <error line="8" code="PPC:ERR-50015">Argument $rgba is missing from the Docblock of fromRGBA</error>
      <error line="8" code="PPC:ERR-50008">No summary for method fromRGBA()</error>
      <error line="10" code="PPC:ERR-50008">No summary for method isTransparent()</error>
    </parse_markers>
    <source>eJx1UMFOwzAMve8rfKimtRqa4IIEa8fYAXGdOO7iZm4bkSZVkk5IiH8nTcsS2PAhip/97Oe33nRNNwMXElsyHTKCXeO+gpQ87JRQ2jzOfENvLkuH/cvz1n+nJiyN1cgsMIHGgC8BbztBLUlr4HVEPn3zEF1fCs4Cr+ols1xJqMkOwxcpPEC05Q/PWLRX6ZVWreefuZDousR0EhrNOHO4edMonQnaafWLS6VEJHYITbbXEhLbcAM3RaRzTLaia9BleQ63d/dB8FfYu8qyMDJzphJ7B14BwglFT04HcOkyQTUKcJJqivpj6pPTii0knnet0HJ5FcaPX/B01EnxY4SvglNaWWKWjsEsNqjeD9oW4/ql37b0w9N/TBvvK3LfCvP5D7LOPS12a3w3xTfHHryR</source>
  </file>
  <file path="Primitives/Rectangle.php" generated-path="Primitives.Rectangle.html" hash="af4236791b8a3654ef9791f27bca1cb3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <namespace-alias name="Mask">\Chameleon\Mask</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <namespace-alias name="BackgroundColor">\Chameleon\Patterns\BackgroundColor</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Primitives" line="15" package="Default">
      <extends>\Chameleon\Primitives\Primitive</extends>
      <name>Rectangle</name>
      <full_name>\Chameleon\Primitives\Rectangle</full_name>
      <docblock line="15">
        <description>Rectangle, by default completely transparent</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="16" package="Default">
        <name>$width</name>
        <full_name>\Chameleon\Primitives\Rectangle::width</full_name>
        <default></default>
        <docblock line="16">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <property static="false" visibility="private" namespace="Chameleon\Primitives" line="17" package="Default">
        <name>$height</name>
        <full_name>\Chameleon\Primitives\Rectangle::height</full_name>
        <default></default>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="26" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Primitives\Rectangle::__construct()</full_name>
        <docblock line="26">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="26" description="&lt;p&gt;Top left start point&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;width in px&lt;/p&gt;" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="param" line="26" description="&lt;p&gt;height in px&lt;/p&gt;" type="integer" variable="$height">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="41" package="Default">
        <name>getWidth</name>
        <full_name>\Chameleon\Primitives\Rectangle::getWidth()</full_name>
        <docblock line="41">
          <description>Get width in px</description>
          <long-description></long-description>
          <tag name="return" line="41" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="51" package="Default">
        <name>setWidth</name>
        <full_name>\Chameleon\Primitives\Rectangle::setWidth()</full_name>
        <docblock line="51">
          <description>Set width in px</description>
          <long-description></long-description>
          <tag name="param" line="51" description="" type="integer" variable="$width">
            <type>integer</type>
          </tag>
          <tag name="return" line="51" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$width</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="61" package="Default">
        <name>getHeight</name>
        <full_name>\Chameleon\Primitives\Rectangle::getHeight()</full_name>
        <docblock line="61">
          <description>Get height in px</description>
          <long-description></long-description>
          <tag name="return" line="61" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="71" package="Default">
        <name>setHeight</name>
        <full_name>\Chameleon\Primitives\Rectangle::setHeight()</full_name>
        <docblock line="71">
          <description>Set height in px</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="integer" variable="$height">
            <type>integer</type>
          </tag>
          <tag name="return" line="71" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$height</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Chameleon\Primitives" line="76" package="Default">
        <name>drawPattern</name>
        <full_name>\Chameleon\Primitives\Rectangle::drawPattern()</full_name>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default></default>
          <type>\Chameleon\Patterns\IPattern</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mask</name>
          <default></default>
          <type>\Chameleon\Mask</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startX</name>
          <default></default>
          <type>\Chameleon\Primitives\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startY</name>
          <default></default>
          <type>\Chameleon\Primitives\int</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="113" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\Rectangle::draw()</full_name>
        <docblock line="113">
          <description>Draw the rectangle onto the image resource</description>
          <long-description>Draws the rectangle with border and background (if set).
By default, a rectangle has a 1px black border and no background</long-description>
          <tag name="param" line="113" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="113" description="" type="\Chameleon\Primitives\Rectangle">
            <type>\Chameleon\Primitives\Rectangle</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="76" code="PPC:ERR-50015">Argument $image is missing from the Docblock of drawPattern</error>
      <error line="76" code="PPC:ERR-50015">Argument $pattern is missing from the Docblock of drawPattern</error>
      <error line="76" code="PPC:ERR-50015">Argument $mask is missing from the Docblock of drawPattern</error>
      <error line="76" code="PPC:ERR-50015">Argument $startX is missing from the Docblock of drawPattern</error>
      <error line="76" code="PPC:ERR-50015">Argument $startY is missing from the Docblock of drawPattern</error>
      <error line="76" code="PPC:ERR-50008">No summary for method drawPattern()</error>
      <error line="16" code="PPC:ERR-50007">No summary for property $width</error>
      <error line="17" code="PPC:ERR-50007">No summary for property $height</error>
    </parse_markers>
    <source>eJzlWdtuGzcQffdXzIMarGyltvNYRU5rF00DJICRumkMBDCoXUoivCIXS64tpfG/d8i9iFyRK9VyHLfhg247M5zL4eGQevkqm2V7gCOhcUpyGkmVs1hdqWVGJYzguD80jzmZU5mRmMLZDD+mVPBP5zmbM8VuqBzuGaFC2o8/0FiJ/MXQ8+jNnEyp78E7Iq99v5+JVOS/EW1w6Xt+TpSiOZef3lSfOoVOSXw9zUXBE2O38v5wf9+8wz68R9cJn6Z0AOMlpmZCilRBLOZZShVNl6BywjEdOeWq0jk075hDKVfqQBeK8kRCkyr4u5THkeXshigKvVuWqNlw/fcZZdOZqrxzPCy9PDOTxYJjzQqdGuuhLfczOkrmUNUDeplgXMGFyCClEwVSkVyB+dGjpUVLD6F8ZRyyRUiwdBmqt7bo4SrGYpyyGCYFjxUTHK6umjAi18+B5cHAnqRvpVKPnpoxCc9PykgQuqX+0C9UxjJaS74jVIUxWpViJeTXkFSdijyheYW1iBdp2g+Yb4QvZiy+5lTK6LhLtkFtwPhdECmvqQpUzylkTlWRc3CBEC7alKq/tNGoDz+ZyrgFqay5Kd/G2z+287aNT18oN4IlW8Ui61hW9nRUkqaTEM66IGTHvm2BAotmxwr9bqxuWaI2zLtrtI3Da9ywa5WqeBwi6K5T1yreolI1HTdOJDm5rVeg2cigx/TbAOrNB6mn/DAAvaFBb46vFXkZtv1of7lsM9nhIe4gUybRApA0RYbHTUrqPKsZhcq0ozEROSXxDKJ6YiASekavbdykxvirc5NX85h9MKo03ARZqaicO8OpKCihSApkjoSkQEwgYwuaSrcEzRLRCdDzrSijxXOrIlmiNXZbspJ9ps26Qxitb5SVo28F7nHipkqjx0HMG+aMobGjIWYFXpbG9eeDA1/m0Og7kpk6MJ7QhQ7cFEXbxpRAmdlYIK8zjrCR68lfaN8Z/OAlDiOxRAnER8Ju0LlBTUet+Cp33kzAZAwjFLcSDOiNNwMDVGBYHI6OGZe1c2tG2ARzYGX9A0kL+ovCqfswGo2w1ymoLxfG1QZJuDTP9bSRV64K/KDBf1hq2UhddkjVOC9dNvDVLi8wW8u+V62/nui7Pf+3MO39qlOqU5k3LZ6bXXwgRZHH1NZqW5AtE7cMcTw2rQAQnsC42ekhwupgavs/2jZOm550AMSyM8NVT+A4W8A4RRO2SS4sq91kbXOaj601127F1hp/DkMGmNoAsGbrcbvL8UGvWwPXDuKHxxQXZ6vVD+EYF9KfnBn6s7MfE46r65qagwRaM1FMWJrSpMl65IdbyaV6qYf9dMF7NIAjD0iNsU2E7dXyehteUs0c6JOp2vsKylG/YyHW0aHSuZBMFx6bjfKHj/fWvNxlTk0glkjdoz6H4/t707LZdFXdRu2U1ls6TZza3Y+r9MDNjIbh/Jpymuu+RVONYXe92ZXbg6eDaFxeodS0LiPg9NZ0MZHb+A7aDdag3ChKz0NeGf6subuQjE+Nb35Xavt2w7Uh11sUeG0Zdui4yfgWq+C+W1kHwdrnU3j2DFpPmsMonCAfbSRfx9qOxFtuVw9Luo5/X5lwMZgLkT1ZLkayCtV6B2J8cKNhBj8IY3U3cn80FtcDUXIqlBLz7wwogR30qxT1G2DIH96jwuotnajvC1Q7ufNfbgf10PdE7pWaNZ5Eyb1L8AkdCR6ZDP6HpwWTte6TAibjhb6lCy3+tZvaTfITgrF0HTRW946Wfx23j43e6hZyTdG9i/Sql7eJy+o2calvE6ubSfzmv090VReV6kKrlpeD+KVbUw/dkXcKmOCM1RDcv3xpyyMq0tB+0rJ7Umc8TPEa+uUkaDcPspZjePmvHVaB7rtl9qSp9AaHK7PjcLtWj00lMjO7oJLWVetSA75eLfoW0zpLh8b6Gu9+chc8tDyFU7l9Tus6kTcpfGKdSIfRBznDh/6nKl9fnfwD/KtqVA==</source>
  </file>
  <file path="Patterns/RGBNoise.php" generated-path="Patterns.RGBNoise.html" hash="be4b0f335a43e8c7888f28ecd7e991f8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="SplFixedArray">\SplFixedArray</namespace-alias>
    <namespace-alias name="ColorFactory">\Chameleon\ColorFactory</namespace-alias>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="IColor">\Chameleon\Colors\IColor</namespace-alias>
    <namespace-alias name="RGBAColor">\Chameleon\Colors\RGBAColor</namespace-alias>
    <namespace-alias name="IPattern">\Chameleon\Patterns\IPattern</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon\Patterns" line="12" package="Default">
      <extends>\Chameleon\Patterns\Pattern</extends>
      <name>RGBNoise</name>
      <full_name>\Chameleon\Patterns\RGBNoise</full_name>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="Default"/>
        <tag name="inherited_from" description="\Chameleon\Patterns\Pattern" refers="\Chameleon\Patterns\Pattern" link="/classes/Chameleon.Patterns.Pattern.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="19" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\RGBNoise::__construct()</full_name>
        <docblock line="19">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="19" description="&lt;p&gt;Number of colors to be generated&lt;/p&gt;" type="integer" variable="$colors">
            <type>integer</type>
          </tag>
          <tag name="param" line="19" description="&lt;p&gt;Optional alpha channel value for the colors&lt;/p&gt;" type="integer" variable="$alpha">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\Chameleon\Patterns\Pattern::__construct()" refers="\Chameleon\Patterns\Pattern::__construct()" link="/classes/Chameleon.Patterns.Pattern.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alpha</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="34" package="Default">
        <name>getColorAt</name>
        <full_name>\Chameleon\Patterns\RGBNoise::getColorAt()</full_name>
        <docblock line="34">
          <description>Get a random color for the position.</description>
          <long-description></long-description>
          <tag name="param" line="34" description="&lt;p&gt;x coordinate&lt;/p&gt;" type="integer" variable="$x">
            <type>integer</type>
          </tag>
          <tag name="param" line="34" description="&lt;p&gt;y coordinate&lt;/p&gt;" type="integer" variable="$y">
            <type>integer</type>
          </tag>
          <tag name="return" line="34" description="The color for the given position" type="\Chameleon\Colors\IColor">
            <type>\Chameleon\Colors\IColor</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$x</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$y</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Patterns" line="11" package="Default">
        <name>__construct</name>
        <full_name>\Chameleon\Patterns\Pattern::__construct()</full_name>
        <docblock line="11">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$colors</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="15" package="Default">
        <name>setColor</name>
        <full_name>\Chameleon\Patterns\Pattern::setColor()</full_name>
        <docblock line="15">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$color</name>
          <default></default>
          <type>\Chameleon\Colors\IColor</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Chameleon\Patterns" line="19" package="Default">
        <name>getColor</name>
        <full_name>\Chameleon\Patterns\Pattern::getColor()</full_name>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>\Chameleon\Patterns\int</type>
        </argument>
        <inherited_from>\Chameleon\Patterns\Pattern</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="12" code="PPC:ERR-50005">No summary for class \Chameleon\Patterns\RGBNoise</error>
    </parse_markers>
    <source>eJyNVMFu1DAUvO9XzKGHZLvQUqmX3ZayrNSql4Io4rTSyuu83VhKbMt2SgLqv+MkTmoQgfriZ7834/EbJ1c3Otcz+JERL5ihxDojuNu5RpPFNd6lqy4tWUlWM07Y5D4sSMntZ+YcGWlXs66ksoRHXdyKmrK1MaxZjdsvmI0qlLll3Cnz1/w3alMXk1C7ve/mfxR8ufu4nqwZNG/vQxTE+8tbCw99UMIDqHYkM4tQhJ9dUTvO5vMxxhybDseV9H2rWulRMq77oJlhJYR0OOGdTjxU5Z4M1AFhwynsCUeSZJijbArOCp0zfNJOKMkK9EueMympwBMrKsJBGbicAnFEdDbGutoXguNQSd4SYbcbL5FEKhfxmdc4T6NWdDT+zUi3XMbwAE1Da4fRikpORMuygp+vhjPa1enpn8wxuyXXOerhC0j6jtHjpHQ7w2SWnC9wcXmZLvD/jf42aXjZw3ievURTbt+RA0PLpsq+uWOrtbKibeTbVzyAGrVHK5MJ6Y2eqmrQTFUZcpV/lf2ngK+D06OYo3giOUp6lf/H0OJ1sL8OzjcplsNBvxsURAweDQSxI1HuUfygJMUb/0eJGt83/Xl28/4XFCtQyQ==</source>
  </file>
  <file path="Primitives/Primitive.php" generated-path="Primitives.Primitive.html" hash="23cf5b7b6862cc4501010f1924fc9c3e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzNVj1PwzAQ3fkVN3RoKyEkxhYoggF1qwRiYnHdo7FIbMt2AAn478Su6zhpkhpYyNCk8X29d8/nXCxkJk+gujgpUEtCEW6z6jFHwZ9WihXMsFfU8xNnVOp4+RGpEep83rG0LMgWuxZuRS6Uflq6e5fBihiDilcm/smnJmttFKEGaE60hlAasELmWCA3Gpb12w/nZC+phKkKxQ2MpGDc+HitpbVQG1QhZa/FQ8boC0etu20IfdkqUfJNs/gGAFmuc0bhueTUMMFho8jb2BEGI2Zvk8jrbDoNzzCFe6z8HcgKoxSa2QiRQWx7LYkiBfguefQNA4WmVBw05s/R+7MaWatSjWblc46bYScwc2Ei3u01MhnTcHoFzgguQwtiI1+Fs61Xvno5uAscsAQSfHRfbhLMbQTTAttD/egtO0BMqd/2cCcmkDuVDDdwvxE+eZnnFYO7f/CQYYf/r5p6E4t/vNgnDLmOdbexeVyX2/uoTVhqn9N48pEbRKV2uondIq3xDze8Z2QkNd7sxwgwDvJ9WAB264xqD1M1vt//DwIIs23czJjW/uBtBWAOx2Sbwh9KIJExn8ECGOYpQRQ1H5OZi5iih44D4ogiwpnxb8ZB+xSLRwK1B/dRRbQjWE3Q+sjvojBZD8l8dY2FHp6G1XDAx+QHU+Lwk6DGuftdXH0DU5alIQ==</source>
  </file>
  <file path="ColorFactory.php" generated-path="ColorFactory.html" hash="4c0c103f9d55be06e315b05c7e952643" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Hex8Color">\Chameleon\Colors\Hex8Color</namespace-alias>
    <class final="false" abstract="false" namespace="Chameleon" line="12" package="Default">
      <extends/>
      <name>ColorFactory</name>
      <full_name>\Chameleon\ColorFactory</full_name>
      <docblock line="12">
        <description>ColorFactory provides various helper functions for working with colors.</description>
        <long-description>There are 141 named colors available, for a list, see https://www.w3schools.com/colors/colors_names.asp
The 141st color is 'transparent'</long-description>
        <tag name="package" line="12" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="13" package="Default">
        <name>transparent</name>
        <full_name>\Chameleon\ColorFactory::transparent()</full_name>
        <docblock line="13">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="17" package="Default">
        <name>aliceBlue</name>
        <full_name>\Chameleon\ColorFactory::aliceBlue()</full_name>
        <docblock line="17">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="21" package="Default">
        <name>antiqueWhite</name>
        <full_name>\Chameleon\ColorFactory::antiqueWhite()</full_name>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="25" package="Default">
        <name>aqua</name>
        <full_name>\Chameleon\ColorFactory::aqua()</full_name>
        <docblock line="25">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="29" package="Default">
        <name>aquamarine</name>
        <full_name>\Chameleon\ColorFactory::aquamarine()</full_name>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="33" package="Default">
        <name>azure</name>
        <full_name>\Chameleon\ColorFactory::azure()</full_name>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="37" package="Default">
        <name>beige</name>
        <full_name>\Chameleon\ColorFactory::beige()</full_name>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="41" package="Default">
        <name>bisque</name>
        <full_name>\Chameleon\ColorFactory::bisque()</full_name>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="45" package="Default">
        <name>black</name>
        <full_name>\Chameleon\ColorFactory::black()</full_name>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="49" package="Default">
        <name>blanchedAlmond</name>
        <full_name>\Chameleon\ColorFactory::blanchedAlmond()</full_name>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="53" package="Default">
        <name>blue</name>
        <full_name>\Chameleon\ColorFactory::blue()</full_name>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="57" package="Default">
        <name>blueViolet</name>
        <full_name>\Chameleon\ColorFactory::blueViolet()</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="61" package="Default">
        <name>brown</name>
        <full_name>\Chameleon\ColorFactory::brown()</full_name>
        <docblock line="61">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="65" package="Default">
        <name>burlyWood</name>
        <full_name>\Chameleon\ColorFactory::burlyWood()</full_name>
        <docblock line="65">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="69" package="Default">
        <name>cadetBlue</name>
        <full_name>\Chameleon\ColorFactory::cadetBlue()</full_name>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="73" package="Default">
        <name>chartreuse</name>
        <full_name>\Chameleon\ColorFactory::chartreuse()</full_name>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="77" package="Default">
        <name>chocolate</name>
        <full_name>\Chameleon\ColorFactory::chocolate()</full_name>
        <docblock line="77">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="81" package="Default">
        <name>coral</name>
        <full_name>\Chameleon\ColorFactory::coral()</full_name>
        <docblock line="81">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="85" package="Default">
        <name>cornflowerBlue</name>
        <full_name>\Chameleon\ColorFactory::cornflowerBlue()</full_name>
        <docblock line="85">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="89" package="Default">
        <name>cornsilk</name>
        <full_name>\Chameleon\ColorFactory::cornsilk()</full_name>
        <docblock line="89">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="93" package="Default">
        <name>crimson</name>
        <full_name>\Chameleon\ColorFactory::crimson()</full_name>
        <docblock line="93">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="97" package="Default">
        <name>cyan</name>
        <full_name>\Chameleon\ColorFactory::cyan()</full_name>
        <docblock line="97">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="101" package="Default">
        <name>darkBlue</name>
        <full_name>\Chameleon\ColorFactory::darkBlue()</full_name>
        <docblock line="101">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="105" package="Default">
        <name>darkCyan</name>
        <full_name>\Chameleon\ColorFactory::darkCyan()</full_name>
        <docblock line="105">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="109" package="Default">
        <name>darkGoldenRod</name>
        <full_name>\Chameleon\ColorFactory::darkGoldenRod()</full_name>
        <docblock line="109">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="113" package="Default">
        <name>darkGray</name>
        <full_name>\Chameleon\ColorFactory::darkGray()</full_name>
        <docblock line="113">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="117" package="Default">
        <name>darkGrey</name>
        <full_name>\Chameleon\ColorFactory::darkGrey()</full_name>
        <docblock line="117">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="121" package="Default">
        <name>darkGreen</name>
        <full_name>\Chameleon\ColorFactory::darkGreen()</full_name>
        <docblock line="121">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="125" package="Default">
        <name>darkKhaki</name>
        <full_name>\Chameleon\ColorFactory::darkKhaki()</full_name>
        <docblock line="125">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="129" package="Default">
        <name>darkMagenta</name>
        <full_name>\Chameleon\ColorFactory::darkMagenta()</full_name>
        <docblock line="129">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="133" package="Default">
        <name>darkOliveGreen</name>
        <full_name>\Chameleon\ColorFactory::darkOliveGreen()</full_name>
        <docblock line="133">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="137" package="Default">
        <name>darkOrange</name>
        <full_name>\Chameleon\ColorFactory::darkOrange()</full_name>
        <docblock line="137">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="141" package="Default">
        <name>darkOrchid</name>
        <full_name>\Chameleon\ColorFactory::darkOrchid()</full_name>
        <docblock line="141">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="145" package="Default">
        <name>darkRed</name>
        <full_name>\Chameleon\ColorFactory::darkRed()</full_name>
        <docblock line="145">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="149" package="Default">
        <name>darkSalmon</name>
        <full_name>\Chameleon\ColorFactory::darkSalmon()</full_name>
        <docblock line="149">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="153" package="Default">
        <name>darkSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::darkSeaGreen()</full_name>
        <docblock line="153">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="157" package="Default">
        <name>darkSlateBlue</name>
        <full_name>\Chameleon\ColorFactory::darkSlateBlue()</full_name>
        <docblock line="157">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="161" package="Default">
        <name>darkSlateGray</name>
        <full_name>\Chameleon\ColorFactory::darkSlateGray()</full_name>
        <docblock line="161">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="165" package="Default">
        <name>darkSlateGrey</name>
        <full_name>\Chameleon\ColorFactory::darkSlateGrey()</full_name>
        <docblock line="165">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="169" package="Default">
        <name>darkTurquoise</name>
        <full_name>\Chameleon\ColorFactory::darkTurquoise()</full_name>
        <docblock line="169">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="173" package="Default">
        <name>darkViolet</name>
        <full_name>\Chameleon\ColorFactory::darkViolet()</full_name>
        <docblock line="173">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="177" package="Default">
        <name>deepPink</name>
        <full_name>\Chameleon\ColorFactory::deepPink()</full_name>
        <docblock line="177">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="181" package="Default">
        <name>deepSkyBlue</name>
        <full_name>\Chameleon\ColorFactory::deepSkyBlue()</full_name>
        <docblock line="181">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="185" package="Default">
        <name>dimGray</name>
        <full_name>\Chameleon\ColorFactory::dimGray()</full_name>
        <docblock line="185">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="189" package="Default">
        <name>dimGrey</name>
        <full_name>\Chameleon\ColorFactory::dimGrey()</full_name>
        <docblock line="189">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="193" package="Default">
        <name>dodgerBlue</name>
        <full_name>\Chameleon\ColorFactory::dodgerBlue()</full_name>
        <docblock line="193">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="197" package="Default">
        <name>fireBrick</name>
        <full_name>\Chameleon\ColorFactory::fireBrick()</full_name>
        <docblock line="197">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="201" package="Default">
        <name>floralWhite</name>
        <full_name>\Chameleon\ColorFactory::floralWhite()</full_name>
        <docblock line="201">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="205" package="Default">
        <name>forestGreen</name>
        <full_name>\Chameleon\ColorFactory::forestGreen()</full_name>
        <docblock line="205">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="209" package="Default">
        <name>fuchsia</name>
        <full_name>\Chameleon\ColorFactory::fuchsia()</full_name>
        <docblock line="209">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="213" package="Default">
        <name>gainsboro</name>
        <full_name>\Chameleon\ColorFactory::gainsboro()</full_name>
        <docblock line="213">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="217" package="Default">
        <name>ghostWhite</name>
        <full_name>\Chameleon\ColorFactory::ghostWhite()</full_name>
        <docblock line="217">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="221" package="Default">
        <name>gold</name>
        <full_name>\Chameleon\ColorFactory::gold()</full_name>
        <docblock line="221">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="225" package="Default">
        <name>goldenRod</name>
        <full_name>\Chameleon\ColorFactory::goldenRod()</full_name>
        <docblock line="225">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="229" package="Default">
        <name>gray</name>
        <full_name>\Chameleon\ColorFactory::gray()</full_name>
        <docblock line="229">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="233" package="Default">
        <name>grey</name>
        <full_name>\Chameleon\ColorFactory::grey()</full_name>
        <docblock line="233">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="237" package="Default">
        <name>green</name>
        <full_name>\Chameleon\ColorFactory::green()</full_name>
        <docblock line="237">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="241" package="Default">
        <name>greenYellow</name>
        <full_name>\Chameleon\ColorFactory::greenYellow()</full_name>
        <docblock line="241">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="245" package="Default">
        <name>honeyDew</name>
        <full_name>\Chameleon\ColorFactory::honeyDew()</full_name>
        <docblock line="245">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="249" package="Default">
        <name>hotPink</name>
        <full_name>\Chameleon\ColorFactory::hotPink()</full_name>
        <docblock line="249">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="253" package="Default">
        <name>indianRed</name>
        <full_name>\Chameleon\ColorFactory::indianRed()</full_name>
        <docblock line="253">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="257" package="Default">
        <name>indigo</name>
        <full_name>\Chameleon\ColorFactory::indigo()</full_name>
        <docblock line="257">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="261" package="Default">
        <name>ivory</name>
        <full_name>\Chameleon\ColorFactory::ivory()</full_name>
        <docblock line="261">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="265" package="Default">
        <name>khaki</name>
        <full_name>\Chameleon\ColorFactory::khaki()</full_name>
        <docblock line="265">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="269" package="Default">
        <name>lavender</name>
        <full_name>\Chameleon\ColorFactory::lavender()</full_name>
        <docblock line="269">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="273" package="Default">
        <name>lavenderBlush</name>
        <full_name>\Chameleon\ColorFactory::lavenderBlush()</full_name>
        <docblock line="273">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="277" package="Default">
        <name>lawnGreen</name>
        <full_name>\Chameleon\ColorFactory::lawnGreen()</full_name>
        <docblock line="277">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="281" package="Default">
        <name>lemonChiffon</name>
        <full_name>\Chameleon\ColorFactory::lemonChiffon()</full_name>
        <docblock line="281">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="285" package="Default">
        <name>lightBlue</name>
        <full_name>\Chameleon\ColorFactory::lightBlue()</full_name>
        <docblock line="285">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="289" package="Default">
        <name>lightCoral</name>
        <full_name>\Chameleon\ColorFactory::lightCoral()</full_name>
        <docblock line="289">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="293" package="Default">
        <name>lightCyan</name>
        <full_name>\Chameleon\ColorFactory::lightCyan()</full_name>
        <docblock line="293">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="297" package="Default">
        <name>lightGoldenRodYellow</name>
        <full_name>\Chameleon\ColorFactory::lightGoldenRodYellow()</full_name>
        <docblock line="297">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="301" package="Default">
        <name>lightGray</name>
        <full_name>\Chameleon\ColorFactory::lightGray()</full_name>
        <docblock line="301">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="305" package="Default">
        <name>lightGrey</name>
        <full_name>\Chameleon\ColorFactory::lightGrey()</full_name>
        <docblock line="305">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="309" package="Default">
        <name>lightGreen</name>
        <full_name>\Chameleon\ColorFactory::lightGreen()</full_name>
        <docblock line="309">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="313" package="Default">
        <name>lightPink</name>
        <full_name>\Chameleon\ColorFactory::lightPink()</full_name>
        <docblock line="313">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="317" package="Default">
        <name>lightSalmon</name>
        <full_name>\Chameleon\ColorFactory::lightSalmon()</full_name>
        <docblock line="317">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="321" package="Default">
        <name>lightSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::lightSeaGreen()</full_name>
        <docblock line="321">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="325" package="Default">
        <name>lightSkyBlue</name>
        <full_name>\Chameleon\ColorFactory::lightSkyBlue()</full_name>
        <docblock line="325">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="329" package="Default">
        <name>lightSlateGray</name>
        <full_name>\Chameleon\ColorFactory::lightSlateGray()</full_name>
        <docblock line="329">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="333" package="Default">
        <name>lightSlateGrey</name>
        <full_name>\Chameleon\ColorFactory::lightSlateGrey()</full_name>
        <docblock line="333">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="337" package="Default">
        <name>lightSteelBlue</name>
        <full_name>\Chameleon\ColorFactory::lightSteelBlue()</full_name>
        <docblock line="337">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="341" package="Default">
        <name>lightYellow</name>
        <full_name>\Chameleon\ColorFactory::lightYellow()</full_name>
        <docblock line="341">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="345" package="Default">
        <name>lime</name>
        <full_name>\Chameleon\ColorFactory::lime()</full_name>
        <docblock line="345">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="349" package="Default">
        <name>limeGreen</name>
        <full_name>\Chameleon\ColorFactory::limeGreen()</full_name>
        <docblock line="349">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="353" package="Default">
        <name>linen</name>
        <full_name>\Chameleon\ColorFactory::linen()</full_name>
        <docblock line="353">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="357" package="Default">
        <name>magenta</name>
        <full_name>\Chameleon\ColorFactory::magenta()</full_name>
        <docblock line="357">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="361" package="Default">
        <name>maroon</name>
        <full_name>\Chameleon\ColorFactory::maroon()</full_name>
        <docblock line="361">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="365" package="Default">
        <name>mediumAquaMarine</name>
        <full_name>\Chameleon\ColorFactory::mediumAquaMarine()</full_name>
        <docblock line="365">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="369" package="Default">
        <name>mediumBlue</name>
        <full_name>\Chameleon\ColorFactory::mediumBlue()</full_name>
        <docblock line="369">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="373" package="Default">
        <name>mediumOrchid</name>
        <full_name>\Chameleon\ColorFactory::mediumOrchid()</full_name>
        <docblock line="373">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="377" package="Default">
        <name>mediumPurple</name>
        <full_name>\Chameleon\ColorFactory::mediumPurple()</full_name>
        <docblock line="377">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="381" package="Default">
        <name>mediumSeaGreen</name>
        <full_name>\Chameleon\ColorFactory::mediumSeaGreen()</full_name>
        <docblock line="381">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="385" package="Default">
        <name>mediumSlateBlue</name>
        <full_name>\Chameleon\ColorFactory::mediumSlateBlue()</full_name>
        <docblock line="385">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="389" package="Default">
        <name>mediumSpringGreen</name>
        <full_name>\Chameleon\ColorFactory::mediumSpringGreen()</full_name>
        <docblock line="389">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="393" package="Default">
        <name>mediumTurquoise</name>
        <full_name>\Chameleon\ColorFactory::mediumTurquoise()</full_name>
        <docblock line="393">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="397" package="Default">
        <name>mediumVioletRed</name>
        <full_name>\Chameleon\ColorFactory::mediumVioletRed()</full_name>
        <docblock line="397">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="401" package="Default">
        <name>midnightBlue</name>
        <full_name>\Chameleon\ColorFactory::midnightBlue()</full_name>
        <docblock line="401">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="405" package="Default">
        <name>mintCream</name>
        <full_name>\Chameleon\ColorFactory::mintCream()</full_name>
        <docblock line="405">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="409" package="Default">
        <name>mistyRose</name>
        <full_name>\Chameleon\ColorFactory::mistyRose()</full_name>
        <docblock line="409">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="413" package="Default">
        <name>moccasin</name>
        <full_name>\Chameleon\ColorFactory::moccasin()</full_name>
        <docblock line="413">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="417" package="Default">
        <name>navajoWhite</name>
        <full_name>\Chameleon\ColorFactory::navajoWhite()</full_name>
        <docblock line="417">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="421" package="Default">
        <name>navy</name>
        <full_name>\Chameleon\ColorFactory::navy()</full_name>
        <docblock line="421">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="425" package="Default">
        <name>oldLace</name>
        <full_name>\Chameleon\ColorFactory::oldLace()</full_name>
        <docblock line="425">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="429" package="Default">
        <name>olive</name>
        <full_name>\Chameleon\ColorFactory::olive()</full_name>
        <docblock line="429">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="433" package="Default">
        <name>oliveDrab</name>
        <full_name>\Chameleon\ColorFactory::oliveDrab()</full_name>
        <docblock line="433">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="437" package="Default">
        <name>orange</name>
        <full_name>\Chameleon\ColorFactory::orange()</full_name>
        <docblock line="437">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="441" package="Default">
        <name>orangeRed</name>
        <full_name>\Chameleon\ColorFactory::orangeRed()</full_name>
        <docblock line="441">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="445" package="Default">
        <name>orchid</name>
        <full_name>\Chameleon\ColorFactory::orchid()</full_name>
        <docblock line="445">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="449" package="Default">
        <name>paleGoldenRod</name>
        <full_name>\Chameleon\ColorFactory::paleGoldenRod()</full_name>
        <docblock line="449">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="453" package="Default">
        <name>paleGreen</name>
        <full_name>\Chameleon\ColorFactory::paleGreen()</full_name>
        <docblock line="453">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="457" package="Default">
        <name>paleTurquoise</name>
        <full_name>\Chameleon\ColorFactory::paleTurquoise()</full_name>
        <docblock line="457">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="461" package="Default">
        <name>paleVioletRed</name>
        <full_name>\Chameleon\ColorFactory::paleVioletRed()</full_name>
        <docblock line="461">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="465" package="Default">
        <name>papayaWhip</name>
        <full_name>\Chameleon\ColorFactory::papayaWhip()</full_name>
        <docblock line="465">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="469" package="Default">
        <name>peachPuff</name>
        <full_name>\Chameleon\ColorFactory::peachPuff()</full_name>
        <docblock line="469">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="473" package="Default">
        <name>peru</name>
        <full_name>\Chameleon\ColorFactory::peru()</full_name>
        <docblock line="473">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="477" package="Default">
        <name>pink</name>
        <full_name>\Chameleon\ColorFactory::pink()</full_name>
        <docblock line="477">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="481" package="Default">
        <name>plum</name>
        <full_name>\Chameleon\ColorFactory::plum()</full_name>
        <docblock line="481">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="485" package="Default">
        <name>powderBlue</name>
        <full_name>\Chameleon\ColorFactory::powderBlue()</full_name>
        <docblock line="485">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="489" package="Default">
        <name>purple</name>
        <full_name>\Chameleon\ColorFactory::purple()</full_name>
        <docblock line="489">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="493" package="Default">
        <name>rebeccaPurple</name>
        <full_name>\Chameleon\ColorFactory::rebeccaPurple()</full_name>
        <docblock line="493">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="497" package="Default">
        <name>red</name>
        <full_name>\Chameleon\ColorFactory::red()</full_name>
        <docblock line="497">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="501" package="Default">
        <name>rosyBrown</name>
        <full_name>\Chameleon\ColorFactory::rosyBrown()</full_name>
        <docblock line="501">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="505" package="Default">
        <name>royalBlue</name>
        <full_name>\Chameleon\ColorFactory::royalBlue()</full_name>
        <docblock line="505">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="509" package="Default">
        <name>saddleBrown</name>
        <full_name>\Chameleon\ColorFactory::saddleBrown()</full_name>
        <docblock line="509">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="513" package="Default">
        <name>salmon</name>
        <full_name>\Chameleon\ColorFactory::salmon()</full_name>
        <docblock line="513">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="517" package="Default">
        <name>sandyBrown</name>
        <full_name>\Chameleon\ColorFactory::sandyBrown()</full_name>
        <docblock line="517">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="521" package="Default">
        <name>seaGreen</name>
        <full_name>\Chameleon\ColorFactory::seaGreen()</full_name>
        <docblock line="521">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="525" package="Default">
        <name>seaShell</name>
        <full_name>\Chameleon\ColorFactory::seaShell()</full_name>
        <docblock line="525">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="529" package="Default">
        <name>sienna</name>
        <full_name>\Chameleon\ColorFactory::sienna()</full_name>
        <docblock line="529">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="533" package="Default">
        <name>silver</name>
        <full_name>\Chameleon\ColorFactory::silver()</full_name>
        <docblock line="533">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="537" package="Default">
        <name>skyBlue</name>
        <full_name>\Chameleon\ColorFactory::skyBlue()</full_name>
        <docblock line="537">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="541" package="Default">
        <name>slateBlue</name>
        <full_name>\Chameleon\ColorFactory::slateBlue()</full_name>
        <docblock line="541">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="545" package="Default">
        <name>slateGray</name>
        <full_name>\Chameleon\ColorFactory::slateGray()</full_name>
        <docblock line="545">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="549" package="Default">
        <name>slateGrey</name>
        <full_name>\Chameleon\ColorFactory::slateGrey()</full_name>
        <docblock line="549">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="553" package="Default">
        <name>snow</name>
        <full_name>\Chameleon\ColorFactory::snow()</full_name>
        <docblock line="553">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="557" package="Default">
        <name>springGreen</name>
        <full_name>\Chameleon\ColorFactory::springGreen()</full_name>
        <docblock line="557">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="561" package="Default">
        <name>steelBlue</name>
        <full_name>\Chameleon\ColorFactory::steelBlue()</full_name>
        <docblock line="561">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="565" package="Default">
        <name>tan</name>
        <full_name>\Chameleon\ColorFactory::tan()</full_name>
        <docblock line="565">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="569" package="Default">
        <name>teal</name>
        <full_name>\Chameleon\ColorFactory::teal()</full_name>
        <docblock line="569">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="573" package="Default">
        <name>thistle</name>
        <full_name>\Chameleon\ColorFactory::thistle()</full_name>
        <docblock line="573">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="577" package="Default">
        <name>tomato</name>
        <full_name>\Chameleon\ColorFactory::tomato()</full_name>
        <docblock line="577">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="581" package="Default">
        <name>turquoise</name>
        <full_name>\Chameleon\ColorFactory::turquoise()</full_name>
        <docblock line="581">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="585" package="Default">
        <name>violet</name>
        <full_name>\Chameleon\ColorFactory::violet()</full_name>
        <docblock line="585">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="589" package="Default">
        <name>wheat</name>
        <full_name>\Chameleon\ColorFactory::wheat()</full_name>
        <docblock line="589">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="593" package="Default">
        <name>white</name>
        <full_name>\Chameleon\ColorFactory::white()</full_name>
        <docblock line="593">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="597" package="Default">
        <name>whiteSmoke</name>
        <full_name>\Chameleon\ColorFactory::whiteSmoke()</full_name>
        <docblock line="597">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="601" package="Default">
        <name>yellow</name>
        <full_name>\Chameleon\ColorFactory::yellow()</full_name>
        <docblock line="601">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Chameleon" line="605" package="Default">
        <name>yellowGreen</name>
        <full_name>\Chameleon\ColorFactory::yellowGreen()</full_name>
        <docblock line="605">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="13" code="PPC:ERR-50008">No summary for method transparent()</error>
      <error line="17" code="PPC:ERR-50008">No summary for method aliceBlue()</error>
      <error line="21" code="PPC:ERR-50008">No summary for method antiqueWhite()</error>
      <error line="25" code="PPC:ERR-50008">No summary for method aqua()</error>
      <error line="29" code="PPC:ERR-50008">No summary for method aquamarine()</error>
      <error line="33" code="PPC:ERR-50008">No summary for method azure()</error>
      <error line="37" code="PPC:ERR-50008">No summary for method beige()</error>
      <error line="41" code="PPC:ERR-50008">No summary for method bisque()</error>
      <error line="45" code="PPC:ERR-50008">No summary for method black()</error>
      <error line="49" code="PPC:ERR-50008">No summary for method blanchedAlmond()</error>
      <error line="53" code="PPC:ERR-50008">No summary for method blue()</error>
      <error line="57" code="PPC:ERR-50008">No summary for method blueViolet()</error>
      <error line="61" code="PPC:ERR-50008">No summary for method brown()</error>
      <error line="65" code="PPC:ERR-50008">No summary for method burlyWood()</error>
      <error line="69" code="PPC:ERR-50008">No summary for method cadetBlue()</error>
      <error line="73" code="PPC:ERR-50008">No summary for method chartreuse()</error>
      <error line="77" code="PPC:ERR-50008">No summary for method chocolate()</error>
      <error line="81" code="PPC:ERR-50008">No summary for method coral()</error>
      <error line="85" code="PPC:ERR-50008">No summary for method cornflowerBlue()</error>
      <error line="89" code="PPC:ERR-50008">No summary for method cornsilk()</error>
      <error line="93" code="PPC:ERR-50008">No summary for method crimson()</error>
      <error line="97" code="PPC:ERR-50008">No summary for method cyan()</error>
      <error line="101" code="PPC:ERR-50008">No summary for method darkBlue()</error>
      <error line="105" code="PPC:ERR-50008">No summary for method darkCyan()</error>
      <error line="109" code="PPC:ERR-50008">No summary for method darkGoldenRod()</error>
      <error line="113" code="PPC:ERR-50008">No summary for method darkGray()</error>
      <error line="117" code="PPC:ERR-50008">No summary for method darkGrey()</error>
      <error line="121" code="PPC:ERR-50008">No summary for method darkGreen()</error>
      <error line="125" code="PPC:ERR-50008">No summary for method darkKhaki()</error>
      <error line="129" code="PPC:ERR-50008">No summary for method darkMagenta()</error>
      <error line="133" code="PPC:ERR-50008">No summary for method darkOliveGreen()</error>
      <error line="137" code="PPC:ERR-50008">No summary for method darkOrange()</error>
      <error line="141" code="PPC:ERR-50008">No summary for method darkOrchid()</error>
      <error line="145" code="PPC:ERR-50008">No summary for method darkRed()</error>
      <error line="149" code="PPC:ERR-50008">No summary for method darkSalmon()</error>
      <error line="153" code="PPC:ERR-50008">No summary for method darkSeaGreen()</error>
      <error line="157" code="PPC:ERR-50008">No summary for method darkSlateBlue()</error>
      <error line="161" code="PPC:ERR-50008">No summary for method darkSlateGray()</error>
      <error line="165" code="PPC:ERR-50008">No summary for method darkSlateGrey()</error>
      <error line="169" code="PPC:ERR-50008">No summary for method darkTurquoise()</error>
      <error line="173" code="PPC:ERR-50008">No summary for method darkViolet()</error>
      <error line="177" code="PPC:ERR-50008">No summary for method deepPink()</error>
      <error line="181" code="PPC:ERR-50008">No summary for method deepSkyBlue()</error>
      <error line="185" code="PPC:ERR-50008">No summary for method dimGray()</error>
      <error line="189" code="PPC:ERR-50008">No summary for method dimGrey()</error>
      <error line="193" code="PPC:ERR-50008">No summary for method dodgerBlue()</error>
      <error line="197" code="PPC:ERR-50008">No summary for method fireBrick()</error>
      <error line="201" code="PPC:ERR-50008">No summary for method floralWhite()</error>
      <error line="205" code="PPC:ERR-50008">No summary for method forestGreen()</error>
      <error line="209" code="PPC:ERR-50008">No summary for method fuchsia()</error>
      <error line="213" code="PPC:ERR-50008">No summary for method gainsboro()</error>
      <error line="217" code="PPC:ERR-50008">No summary for method ghostWhite()</error>
      <error line="221" code="PPC:ERR-50008">No summary for method gold()</error>
      <error line="225" code="PPC:ERR-50008">No summary for method goldenRod()</error>
      <error line="229" code="PPC:ERR-50008">No summary for method gray()</error>
      <error line="233" code="PPC:ERR-50008">No summary for method grey()</error>
      <error line="237" code="PPC:ERR-50008">No summary for method green()</error>
      <error line="241" code="PPC:ERR-50008">No summary for method greenYellow()</error>
      <error line="245" code="PPC:ERR-50008">No summary for method honeyDew()</error>
      <error line="249" code="PPC:ERR-50008">No summary for method hotPink()</error>
      <error line="253" code="PPC:ERR-50008">No summary for method indianRed()</error>
      <error line="257" code="PPC:ERR-50008">No summary for method indigo()</error>
      <error line="261" code="PPC:ERR-50008">No summary for method ivory()</error>
      <error line="265" code="PPC:ERR-50008">No summary for method khaki()</error>
      <error line="269" code="PPC:ERR-50008">No summary for method lavender()</error>
      <error line="273" code="PPC:ERR-50008">No summary for method lavenderBlush()</error>
      <error line="277" code="PPC:ERR-50008">No summary for method lawnGreen()</error>
      <error line="281" code="PPC:ERR-50008">No summary for method lemonChiffon()</error>
      <error line="285" code="PPC:ERR-50008">No summary for method lightBlue()</error>
      <error line="289" code="PPC:ERR-50008">No summary for method lightCoral()</error>
      <error line="293" code="PPC:ERR-50008">No summary for method lightCyan()</error>
      <error line="297" code="PPC:ERR-50008">No summary for method lightGoldenRodYellow()</error>
      <error line="301" code="PPC:ERR-50008">No summary for method lightGray()</error>
      <error line="305" code="PPC:ERR-50008">No summary for method lightGrey()</error>
      <error line="309" code="PPC:ERR-50008">No summary for method lightGreen()</error>
      <error line="313" code="PPC:ERR-50008">No summary for method lightPink()</error>
      <error line="317" code="PPC:ERR-50008">No summary for method lightSalmon()</error>
      <error line="321" code="PPC:ERR-50008">No summary for method lightSeaGreen()</error>
      <error line="325" code="PPC:ERR-50008">No summary for method lightSkyBlue()</error>
      <error line="329" code="PPC:ERR-50008">No summary for method lightSlateGray()</error>
      <error line="333" code="PPC:ERR-50008">No summary for method lightSlateGrey()</error>
      <error line="337" code="PPC:ERR-50008">No summary for method lightSteelBlue()</error>
      <error line="341" code="PPC:ERR-50008">No summary for method lightYellow()</error>
      <error line="345" code="PPC:ERR-50008">No summary for method lime()</error>
      <error line="349" code="PPC:ERR-50008">No summary for method limeGreen()</error>
      <error line="353" code="PPC:ERR-50008">No summary for method linen()</error>
      <error line="357" code="PPC:ERR-50008">No summary for method magenta()</error>
      <error line="361" code="PPC:ERR-50008">No summary for method maroon()</error>
      <error line="365" code="PPC:ERR-50008">No summary for method mediumAquaMarine()</error>
      <error line="369" code="PPC:ERR-50008">No summary for method mediumBlue()</error>
      <error line="373" code="PPC:ERR-50008">No summary for method mediumOrchid()</error>
      <error line="377" code="PPC:ERR-50008">No summary for method mediumPurple()</error>
      <error line="381" code="PPC:ERR-50008">No summary for method mediumSeaGreen()</error>
      <error line="385" code="PPC:ERR-50008">No summary for method mediumSlateBlue()</error>
      <error line="389" code="PPC:ERR-50008">No summary for method mediumSpringGreen()</error>
      <error line="393" code="PPC:ERR-50008">No summary for method mediumTurquoise()</error>
      <error line="397" code="PPC:ERR-50008">No summary for method mediumVioletRed()</error>
      <error line="401" code="PPC:ERR-50008">No summary for method midnightBlue()</error>
      <error line="405" code="PPC:ERR-50008">No summary for method mintCream()</error>
      <error line="409" code="PPC:ERR-50008">No summary for method mistyRose()</error>
      <error line="413" code="PPC:ERR-50008">No summary for method moccasin()</error>
      <error line="417" code="PPC:ERR-50008">No summary for method navajoWhite()</error>
      <error line="421" code="PPC:ERR-50008">No summary for method navy()</error>
      <error line="425" code="PPC:ERR-50008">No summary for method oldLace()</error>
      <error line="429" code="PPC:ERR-50008">No summary for method olive()</error>
      <error line="433" code="PPC:ERR-50008">No summary for method oliveDrab()</error>
      <error line="437" code="PPC:ERR-50008">No summary for method orange()</error>
      <error line="441" code="PPC:ERR-50008">No summary for method orangeRed()</error>
      <error line="445" code="PPC:ERR-50008">No summary for method orchid()</error>
      <error line="449" code="PPC:ERR-50008">No summary for method paleGoldenRod()</error>
      <error line="453" code="PPC:ERR-50008">No summary for method paleGreen()</error>
      <error line="457" code="PPC:ERR-50008">No summary for method paleTurquoise()</error>
      <error line="461" code="PPC:ERR-50008">No summary for method paleVioletRed()</error>
      <error line="465" code="PPC:ERR-50008">No summary for method papayaWhip()</error>
      <error line="469" code="PPC:ERR-50008">No summary for method peachPuff()</error>
      <error line="473" code="PPC:ERR-50008">No summary for method peru()</error>
      <error line="477" code="PPC:ERR-50008">No summary for method pink()</error>
      <error line="481" code="PPC:ERR-50008">No summary for method plum()</error>
      <error line="485" code="PPC:ERR-50008">No summary for method powderBlue()</error>
      <error line="489" code="PPC:ERR-50008">No summary for method purple()</error>
      <error line="493" code="PPC:ERR-50008">No summary for method rebeccaPurple()</error>
      <error line="497" code="PPC:ERR-50008">No summary for method red()</error>
      <error line="501" code="PPC:ERR-50008">No summary for method rosyBrown()</error>
      <error line="505" code="PPC:ERR-50008">No summary for method royalBlue()</error>
      <error line="509" code="PPC:ERR-50008">No summary for method saddleBrown()</error>
      <error line="513" code="PPC:ERR-50008">No summary for method salmon()</error>
      <error line="517" code="PPC:ERR-50008">No summary for method sandyBrown()</error>
      <error line="521" code="PPC:ERR-50008">No summary for method seaGreen()</error>
      <error line="525" code="PPC:ERR-50008">No summary for method seaShell()</error>
      <error line="529" code="PPC:ERR-50008">No summary for method sienna()</error>
      <error line="533" code="PPC:ERR-50008">No summary for method silver()</error>
      <error line="537" code="PPC:ERR-50008">No summary for method skyBlue()</error>
      <error line="541" code="PPC:ERR-50008">No summary for method slateBlue()</error>
      <error line="545" code="PPC:ERR-50008">No summary for method slateGray()</error>
      <error line="549" code="PPC:ERR-50008">No summary for method slateGrey()</error>
      <error line="553" code="PPC:ERR-50008">No summary for method snow()</error>
      <error line="557" code="PPC:ERR-50008">No summary for method springGreen()</error>
      <error line="561" code="PPC:ERR-50008">No summary for method steelBlue()</error>
      <error line="565" code="PPC:ERR-50008">No summary for method tan()</error>
      <error line="569" code="PPC:ERR-50008">No summary for method teal()</error>
      <error line="573" code="PPC:ERR-50008">No summary for method thistle()</error>
      <error line="577" code="PPC:ERR-50008">No summary for method tomato()</error>
      <error line="581" code="PPC:ERR-50008">No summary for method turquoise()</error>
      <error line="585" code="PPC:ERR-50008">No summary for method violet()</error>
      <error line="589" code="PPC:ERR-50008">No summary for method wheat()</error>
      <error line="593" code="PPC:ERR-50008">No summary for method white()</error>
      <error line="597" code="PPC:ERR-50008">No summary for method whiteSmoke()</error>
      <error line="601" code="PPC:ERR-50008">No summary for method yellow()</error>
      <error line="605" code="PPC:ERR-50008">No summary for method yellowGreen()</error>
    </parse_markers>
    <source>eJzFnGtv2zYUhr/3Vwjdh15QNLKsC9UOKyRR3ICtaNEUKwYUGBiZtrjIokJK9ryh/32UnHTph6HAewpMQmDDUfyYInnOey7O96+GdngQ+KOXe+UG2aigav3TTpn+5YPlN5O799rHynTGuo8/qT/Z8vT2oounT5fH4GmwvCxkMxp7CgZrDnqjXHCQVpvJBa3qBmWD7dQ3oza9C7bGBkdjr3W/C456bINmITy/e7u7x/etsiqQ/mcVr5aPu7m9NJAHqTt51alny7vJoNNufBY4pYJ2HAf34uLieDw+P65d0xrTueeN2V+c//b24fdl+M+lG+7hZpAbz5BAu+DRaGXv75FV/fjo9rqL5bHppHNfDvzv8wX+GKarTjeBG+XoH+4GHtx7s8dPghfB5zt670/nw6pxsn3Qq+O/lzx++F24HJl4+OTl58s/PfgaVPoXVdlNCkGKUDAhwvBL5N2zr6L7Ud9M6kOrR4xe1CXPYPrNJLHbLARhzJ669wu/h0aceTKPYfZfk0WnmTDkK6V3GDYRCa9grHY34KoWdVzBd/mqk801vn8J2L5p1abo9qbfgMMuK47zsZs9j5iwtjz1V206BVlMVkRlHcFsa449gi2SqIgKGDvZ7vTBGGiOeV0yBpvMRm7UiPqKROR1AS/vppV2tMorD9Ru4lvLSwTv8SXmpHiU5qsaRhsrO2wzZyLBR2xsv+3MUVl0ttM4T2rYmMx8pzvIjPqpZrjXaKzeOwNta16t4jUOPkmISpMjG2mv0SmeNxQrKeQKHjMraeQfTbdR/TvMiHoTmoY0vJUnyHPk80kjq/+PrMDZTmPceM/on1t5raGZ5mWWkmb6tdz5cA4KNOYVTlvlbzp9UPB9T5K0jEiW5Y0PaEHpL1hFm/M3tmk1tL3zfB1VsB2f2e8UBJ4nmzboSzmrf4Rd53mawZp0YSsJLzUmyoqRltrlrM9QTxazNafttAWPWvVIxP78BnjMtNPx7yd7MxmNafMwrGq+ouDxADD3joWvYbZSw1vdgyp1Feck8uX1CVduJUUz6j260tN8PklgbI0TwWazw0OhVZ0TMhxbbVVpNZZSKqP5gNHdHH3i6VkhCgG7s62xyo2wR4kiVhJGPjWt05Bqm2can+2d1L27MtZgAeh8wujWuBGfbEapBOx8OIbd7Dn/T6HCQSAviiTC0aABZeF84lTMepKpaODHCHp4wf6mus4coYCXC4FHP63p1YkriLxUW+Bht2bENUmal3DdQ/cbLXsw9Kl4UiWw6ZrRO8hkxnOMDbsJfTAW2lBCUKb4Gk1niLBOGXyXO3lQ/UZZKLxM61TA4eUd2Ssw14L3O5zT4Sj+2MNCJKsEIZPRKR/PV63ebrGwftZgeE2v07sWrvcUnLM6JaEruPpBclhnNpibrkn5+AX9OTmNey+vvAsO27XzpwAlCl/PJxGN6ZRvg8b2eR7WPs4jsXG/XaYVnEFZ0Hji0BuYEE8cnuGEzGEUllFBxOOJFJZVNcGtLXRK5jDLGMvhtMZ9PrbhvgV/VKpD738ZVjGHi+sLn2Bj/VETdvwezN1RWhlmKrzX1lHF1wSn0mPYOYuEC4k9XoCjpXL20hrMpDJSI9hebfS0L24m+RruM0zTiuNW9fwJKG0FuGQ9s/HiX1kkCS4hzvS3kx06aOz5Ogs5XIg60ynedF2V6wxWErd8SiUuK1NWwwb99gMMftnvCO0GosiJa59UEIsZX+H15/MHOJfE0GRMtkoYHC3v9aanxI2rfJVnuPXT/VhZJfdgw7HA5dxeu/H0zmCTPvcc1/jOM00jnQYFfB2X8Gz38iD/MIQaEa8L2Nh7OCRbl841eIn56PwX2WDD5SLBpYyZ23nQ/D0uKBYst/IKUhIlqyPYnxpCA1GREIa8cEHzKURMQqPShRdePMCLa5CdInVF1nXNcM244OHcCxNlzihoksMuhB87LFpmPMld8zIL8VaSQQ7yJL0BH0DnITjsPAYlm/bttN2CrqMo4dzDoOyEFapYsoZjwgHO8FVhBccFQzdBcojzIuSwcx7McYM3zZRhTQj6BzgCYyRpYNWV8koMDwDTdL3GE2oWdViUfIM17lSiX4Wa2z7xxk9rThLOHcarNMcVt5ObTafgcbMyTlawzXZ4tr5gYQan8JzsN/hci7iIU3iZOUqRoGZlAn/rzZMvW9WBX8Pygh+WBk6rvodSl0WYRBFsup3uDlid37upsMLnmFaJqWEP6Sg5q7RICDV2R6r/eF+FFx0dqfRDQ/dwzaXAMzSOnBkUGeysHKXQFacswluzRqyVgXsk3i40Kqx3IyT1boytdiOmvTgrBYejyNHs5Qj1oAmRrmPYO42kVLNX2Ry+1wf4exd1zSLcLR5bJSGsSHhdwqrrSGiEJ7QELdjLvbmG/4cG3vl2IhXH8ZjizMXzQcV/Fao/PXj1wz+rRmm0</source>
  </file>
  <file path="Primitives/IPrimitive.php" generated-path="Primitives.IPrimitive.html" hash="018ff62a81ced9c99096fa0d6b978da4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Vector2">\Chameleon\Vector2</namespace-alias>
    <namespace-alias name="Image">\Chameleon\Image</namespace-alias>
    <interface namespace="Chameleon\Primitives" line="7" package="Default">
      <name>IPrimitive</name>
      <full_name>\Chameleon\Primitives\IPrimitive</full_name>
      <docblock line="7">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="7" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="13" package="Default">
        <name>getPosition</name>
        <full_name>\Chameleon\Primitives\IPrimitive::getPosition()</full_name>
        <docblock line="13">
          <description>Get Primitive position</description>
          <long-description></long-description>
          <tag name="return" line="13" description="position vector" type="\Chameleon\Vector2">
            <type>\Chameleon\Vector2</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="21" package="Default">
        <name>setPosition</name>
        <full_name>\Chameleon\Primitives\IPrimitive::setPosition()</full_name>
        <docblock line="21">
          <description>Set the position of this primitive</description>
          <long-description></long-description>
          <tag name="param" line="21" description="&lt;p&gt;The position vector&lt;/p&gt;" type="\Chameleon\Vector2" variable="$point">
            <type>\Chameleon\Vector2</type>
          </tag>
          <tag name="return" line="21" description="" type="\Chameleon\Primitives\IPrimitive">
            <type>\Chameleon\Primitives\IPrimitive</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$point</name>
          <default></default>
          <type>\Chameleon\Vector2</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Chameleon\Primitives" line="29" package="Default">
        <name>draw</name>
        <full_name>\Chameleon\Primitives\IPrimitive::draw()</full_name>
        <docblock line="29">
          <description>Draw this primitive onto the image</description>
          <long-description></long-description>
          <tag name="param" line="29" description="" type="\Chameleon\Image" variable="$image">
            <type>\Chameleon\Image</type>
          </tag>
          <tag name="return" line="29" description="" type="\Chameleon\Primitives\IPrimitive">
            <type>\Chameleon\Primitives\IPrimitive</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$image</name>
          <default></default>
          <type>\Chameleon\Image</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="7" code="PPC:ERR-50009">No summary for interface \Chameleon\Primitives\IPrimitive</error>
    </parse_markers>
    <source>eJyVkj0PwiAQhvf+ihscbBcTR2vURBPTzUTj5IL1aklaIEDrYPzvUqyIHzXKdHDvHc/LMZ6KXARgFiMlKkFShHluwgI5260kLammNao4sKJK+ektpprLYfwhlZTkiG0RZRpl1nROXEM421SzBlHkYohgiRoeMsGVCTjzFL54JlFXkkFL4uRQ2wNPOnCxqPYFTSGrWGqlR9Srtqwfwgicqy7CtSHU+YMNeGb2VIG4Y3fRCiJJ6WB7gpungY3f6o3bWVRYZD/5UZ6f56vCbk8LSU4vJoAzza1R2gzzuyc7b+i9Kv+nPxiQvt8tvH2vSzCdXAG7zL4z</source>
  </file>
  <file path="Image.php" generated-path="Image.html" hash="ad3a7c5cc6ae659d05ab94ce5461edeb" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <markers>
      <todo line="58">Do somthing useful if file not found</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1WVtP5DYUft9fcVihKoNmYelDVUFhL1AoUhcQu72pW41M4pm4ZOLIdmBGK/57z3GcTJJxQpjdRoLJ2Of6+Vxsz09vsjh7AfhEPEyY4oE2SoRmYpYZ13AE+6NDO52yOdcZCzmcxPiacJkevrAzua6Nff55EfLMCJnqzycykepSmjOZp1E17uW6VmIujLjn+vNF9X7YT3jDQ8PSWeKnY8ZwlZK44s1HZA1EEvvZQ3Bz/t6RWBrESWu4mLMZhy92hJ5MiXtmOGwLmrjhWuYqdLY15kMrFKFlSrFlMHJS6dnb2aneYQdOFCcOloKVCVMl56BDxUwY1+jqLG8zptgcRGpg+0FEJobiv0ghW3QRxlzMYgPuY51UcZOrFDRPprXxvZVr+W0iQtCGGfyY5mlICw2hNT9Y2TKuqxvBgZVYg5CeAj5EJ+UPBcaBHSmEGZVzi19QSiyljQ4bYpzJhbTV1GMn1r9KFrWQZjAVCe8C2shIwrvQ5CxJlpBY9jbDxtCR/jOUZbMxncF2xkzcgZiYQkB6J3whtNFBQTtqUVlsFXu4KABZm9MPAqMKgrmY80koU8PTogj0yKMnZJgxLy1qe1k6e3ngpWpox8WtLSm5ioxOzWEn+y1S3/mn6zb8m/ENjSDOb2XFTEw3MwIZN7Xh0cuwNkjhsmW1YrSs0qk0qXOhLUvGEo7l1Egf58YmuSRZZXyXzMdm3O7twaer06sDOJWg5dzElCpYwad5Qm5SUkAqDUypAfnKg9VxcOAK1f646nYtZa1a8VbMUqmwUdhGMM+1sWpuOdY3zOTUCBQXFUVE5kaLiPuT37WEKu0nlHm0KqEJmn2kvSrb6KyGV8fQoMJ46mo/NW9czalpjbhT2lYzRTcZlYVKn+teTLtG5guXIqZpNuJYHWVI6PotHpdi2gtd//ZiTbg1WC47hA5axHNuXLH3d0hfGaf29Sl2HH31vMJ2xs0fRBxQ8Sb2L744tHboxbdxp6ON9/lTsAx16BdLPcSjr1qgq9xkuXOqPt6/88HMwKYFVykHOQWDzuk8y6SihLz4cD7ZAZtimKR6TOGNmfsAMsUWTrPXl+c+nG6lTAahw7D9kn7Chpia2JQ91pGsJ45tIc4Of/uow2u75lP41h9P43gcGFoEJBZRrpIlFdnzUxdsyml8ItDupYiGhtdF3ZO1ilRu7Lx+DwmrGz7DxscV7tZs5cFkxuy34tqh5gmv4qzgipbNHfv2VT4rZ5EVHTQ0tL0vmrfW3LQr8t/OJByYTIz8aPeNweifjo3g7JZRs6h4EHc85bwLPJGzLaJqn0LkZUVnSRaz7rJuVTjJPApGzaFzxXnaHnyf5Lw99s5qaW/vSyzItq2jI5iyRHszyjowDCnbPCN/5lTHCc/8+ibHUb/af36uncQ8vCPXyuhEy8v4wAr2f8Xq4AIntBV6U5nUjtei7nU0hWcF7tCut16a2m4OwibGpgYJv+dJN0xlv0ywZ/hJeyvbCjVvqvvaqQ3yKsXWwHesvshvF8p+tPu2Xxxzy6PAxAphoE27/6IneGJn94wSbfszQiEMxLjzLDbbPK1nxpKbZ6x4Vw7AA4rP0zvcFKRvnl+8L6a/FbyDssIW880Wt+Jq9g4v4vQ4F+nU1nuicnS2nA46O2BCv2fh3UzR0rurtqC8c7PXFvRCLjSPL6q8vHM3PdVlXkDffsdvUn0fvB7Da+oHpber3XRzsNyRtjyvaUE6r6mVhX2cER5HiywcXJRc3FId1xkPxRRBy8SCJ/1Bau/HFvAn8uPhSaTYZruolvBXF5VbxfLa0lv6ewvVNVlaXNwt3KXdkoK4ktg6jGK/bm4RTPe+AAWisDbcyB5YMcfHsP/DCL6D14uzsxbVrE71YwcRWWJpyllfgNuQc86gRDRphn+3g5b3o+s5nUu8W6f+wO7oCKI48rA6Y7OxI+40ZcHagksJLIoELQdLwOBhV2PrTxK6Ysi4wmPLnEdb/aHkcghzUGoraZOa+NS9Zb0O+IJmDGuF0HeDaQ+L3Fj0noic8dCO1nEhTMxDVvkUcx5XBU+RCuZ02ZNVvzzgsJGr5Xqi7VS/WMDu7u52TQpl5errV6FvC1Snpg7UV3c7NaPoXqf66u081WxnZWwB24d+8f/N8X/w8hMG</source>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="Chameleon" full_name="Chameleon">
    <namespace name="Colors" full_name="Chameleon\Colors"/>
    <namespace name="Exceptions" full_name="Chameleon\Exceptions"/>
    <namespace name="Patterns" full_name="Chameleon\Patterns"/>
    <namespace name="Primitives" full_name="Chameleon\Primitives"/>
  </namespace>
  <deprecated count="0"/>
</project>
